[{"/Users/iris/majoramassage/src/Components/Home.js":"1","/Users/iris/majoramassage/src/Components/Profile.js":"2","/Users/iris/majoramassage/src/Components/Auth.js":"3","/Users/iris/majoramassage/src/reportWebVitals.js":"4","/Users/iris/majoramassage/src/Components/Login.js":"5","/Users/iris/majoramassage/src/index.js":"6","/Users/iris/majoramassage/src/Components/Register.js":"7","/Users/iris/majoramassage/src/App.js":"8","/Users/iris/majoramassage/src/Components/AdminPage.js":"9","/Users/iris/majoramassage/src/Components/Information.js":"10","/Users/iris/majoramassage/src/Firebase/firebase.js":"11","/Users/iris/majoramassage/src/Components/cropImage.js":"12","/Users/iris/majoramassage/src/Components/ImageCropper.js":"13","/Users/iris/majoramassage/src/Components/MassageList.js":"14","/Users/iris/majoramassage/src/Components/Parts/Header.js":"15","/Users/iris/majoramassage/src/Components/Routes/EmployeeRoute.js":"16","/Users/iris/majoramassage/src/Components/Routes/LoggedinRoute.js":"17","/Users/iris/majoramassage/src/Components/Booking.js":"18"},{"size":5613,"mtime":1608802804384,"results":"19","hashOfConfig":"20"},{"size":18517,"mtime":1608743419627,"results":"21","hashOfConfig":"20"},{"size":2451,"mtime":1608179603748,"results":"22","hashOfConfig":"20"},{"size":362,"mtime":1606503430657,"results":"23","hashOfConfig":"20"},{"size":2525,"mtime":1606901877592,"results":"24","hashOfConfig":"20"},{"size":530,"mtime":1607537569111,"results":"25","hashOfConfig":"20"},{"size":5998,"mtime":1608745841094,"results":"26","hashOfConfig":"20"},{"size":2347,"mtime":1608543102521,"results":"27","hashOfConfig":"20"},{"size":7129,"mtime":1608730869009,"results":"28","hashOfConfig":"20"},{"size":21763,"mtime":1608793775876,"results":"29","hashOfConfig":"20"},{"size":604,"mtime":1606926058768,"results":"30","hashOfConfig":"20"},{"size":1025,"mtime":1607597381261,"results":"31","hashOfConfig":"20"},{"size":1263,"mtime":1607597126353,"results":"32","hashOfConfig":"20"},{"size":7081,"mtime":1608308957243,"results":"33","hashOfConfig":"20"},{"size":4671,"mtime":1608727292272,"results":"34","hashOfConfig":"20"},{"size":644,"mtime":1607793456386,"results":"35","hashOfConfig":"20"},{"size":524,"mtime":1607793150957,"results":"36","hashOfConfig":"20"},{"size":28257,"mtime":1608793264336,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"q2mra1",{"filePath":"40","messages":"41","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"52"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"60"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"73","messages":"74","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"76"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"79","messages":"80","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"60"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":27,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/iris/majoramassage/src/Components/Home.js",["86","87","88","89","90","91","92","93","94"],"/Users/iris/majoramassage/src/Components/Profile.js",["95","96","97","98","99","100","101","102","103","104","105"],"import React, { useContext, useEffect, useState, useRef } from 'react'\n\nimport app, { firestore, storage } from \"../Firebase/firebase\"\n\nimport Header from \"./Parts/Header\"\n\nimport { Menu, Button, Divider, Descriptions, Select } from \"antd\";\nimport {\n    MenuUnfoldOutlined,\n    MenuFoldOutlined,\n    OrderedListOutlined,\n    EditOutlined,\n    FontColorsOutlined,\n    PictureOutlined\n  } from \"@ant-design/icons\";\nimport Rating from \"@material-ui/lab/Rating\";\nimport FavoriteIcon from \"@material-ui/icons/Favorite\";\nimport { withStyles } from \"@material-ui/core/styles\";\n\nimport ImageCropper from './ImageCropper'\n\n\nimport { AuthContext } from \"./Auth\"\n\nvar _ = require('lodash');\nfunction Profile() {\n    // const {width} = useWidth()\n\n    const inputFile = useRef(null) \n\n    const { Option } = Select;\n\n    const [isModalVisible, setIsModalVisible] = useState(false);\n    const [isModalVisible2, setIsModalVisible2] = useState(false);\n    const [ file, setFile ] = useState(\"\")\n\n    const [blob, setBlob] = useState(null)\n    const [inputImg64, setinputImg64] = useState('')\n\n    const [statusButt, setstatusButt] = useState(false);\n    const [ progress, setProgress ] = useState(false)\n\n    const [ pic, setPic ] = useState(\"\")\n    const [ loadingPic, setLoadingPic ] = useState(\"true\")\n    const [ changeName, setchangeName ] = useState(\"\")\n    const [ changeAge, setChangeAge ] = useState(\"\")\n    const [ type, setType ] = useState(\"\")\n\n    const [ collapse, setCollapse ] = useState(true)\n\n    const { currentUser, userData, Modal } = useContext(AuthContext)\n\n    const QueueOrderedDESC =  _.orderBy(userData.queue, [\"Date\", \"Time\"], [\"desc\", \"desc\"])// เรียงวันล่าสุดมาก่อน\n        const FilterByDone = _.filter(QueueOrderedDESC, ['status', \"Done\"])// Filter หาที่มี status เป็น Done\n            const FilterReviewed = FilterByDone.filter(item => {\n            return ![{totalStar: null}].some(NullStar => NullStar.totalStar === item.Review.totalStar)\n            })// Different หาคืวที่มีการให้คะแนนแล้ว เพื่อจะเอาไปแสดงในช่องรีวิว\n                const sumStar = FilterReviewed.reduce((prev, item)=>{\n                    return(item.Review.totalStar + prev )\n                    }, 0)// sum star ที่งหมด\n                    const finalStar = (sumStar/FilterReviewed.length).toFixed( 1 ) // หารให้เต็ม 5 \n\n    const getBlob = (blob) => {\n        // blob คือ ตัวไฟล์รูป ข้อมูลไฟล์รูปที่ได้มาจาก children \n        setBlob(blob)\n    }\n\n    const Style = {\n        Header: {\n            height: \"8vh\",\n            background: '#595959'\n        },\n        // preContent: {\n        //     height: \"30vh\"\n        // },\n        Content: {\n            minHeight: \"91vh\",\n            // paddingLeft: \"15%\", \n            // paddingRight: \"15%\"\n        }\n    }\n\n    const StyledRating = withStyles({\n        iconFilled: {\n          color: \"#ff6d75\"\n        },\n        iconHover: {\n          color: \"#ff3d47\"\n        }\n      })(Rating);\n\n\n    const tempPic = () => {\n        setTimeout(() => {\n            setLoadingPic(false)\n        }, 1000);\n    }\n\n{/* ////////////////////// Loop create Arr age */}\n    let Age = []\n    for(let i = 20; i<=35; i++){\n        Age.push(<Option value={i}>{i}</Option>)\n    }\n\n{/* ////////////////////// onChange Name or Age */}\n    const handlechangeName =  (e) => {\n        setchangeName(e.target.value)\n    }\n    const handlechangeAge = (value) => {\n        setChangeAge(value)\n    }\n\n{/* ////////////////////// Submit Name or Age */}\n    const submitAction = async () => {\n        setProgress(true)\n        setstatusButt(true)\n\n        try{\n            const userRef = firestore.collection(\"users\").doc(userData.uid)\n\n            const getDoc = await userRef.get()\n            const objDoc = await getDoc.data()\n            \n            const obj = type === \"name\" ? {\n               ...objDoc,\n                displayName: changeName\n           } : {\n                ...objDoc,\n                age: changeAge\n           }\n\n            await userRef.set(obj)\n\n                setchangeName('')\n\n                setIsModalVisible(false);\n                setProgress(false)\n                setstatusButt(false)\n            \n\n        } catch(err) {\n            console.log(err)\n        }\n    }\n\n{/* ////////////////////// Modal Controller */}\n    const showModal = (item) => {\n        setIsModalVisible(true);\n        setType(item)\n        };\n    const handleCancel = () => {\n        setIsModalVisible(false);\n        setIsModalVisible2(false);\n        };\n    \n    const toggleCollapsed = () => {\n        setCollapse(!collapse)\n    }\n\n    const onButtonClick = () => {\n        // `current` points to the mounted file input element\n       inputFile.current.click();\n      };\n\n{/* ////////////////////// onChange File */}\n    const onInputChange = (e) => {\n        // convert image file to base64 string // beyondsundae\n\n        const file = e.target.files[0]\n        \n        if(file){\n            const isLt2M = file.size / 1024 / 1024 > 5 // limit ขนาดของไฟล์ \n            if (!isLt2M) {\n                setFile(file)\n\n                const reader = new FileReader()\n        \n                reader.onload = () => {\n                    setinputImg64(reader.result)\n                    // รูปที่ encode เป็น base64 แล้ว\n                }\n        \n                if (file) {\n                    reader.readAsDataURL(file)\n                    setIsModalVisible2(true);\n                } \n            } else{ alert('Image must smaller than 5MB!')}\n        } else{ return null}\n    }\n\n{/* ////////////////////// Submit Photo */}\n    const handleSubmitImage = async (e) => {\n        e.preventDefault()\n\n        const upPicRef = storage.child(userData.role + \"/\" + currentUser.uid )\n\n        if( file ) {\n            const fileName = \"ProfilePic.jpg\";\n            const targetRef = upPicRef.child(fileName)\n            const uploadTask = targetRef.put(blob, { contentType: blob.type })\n\n            const userRef = firestore.collection(\"users\").doc(userData.uid)\n\n            const getDoc = await userRef.get()\n            const objDoc = await getDoc.data()\n\n            setProgress(true)\n            setstatusButt(true)\n\n            uploadTask.on(\n                \"state_changed\", \n\n                ()=>{},\n\n                (error) => {\n                    console.log(error)\n                },\n\n                () => {\n                    setFile(\"\")\n\n                    uploadTask\n                    .snapshot\n                    .ref\n                    .getDownloadURL()\n                    .then(( photoURL ) => {\n                        const obj = {\n                            ...objDoc,\n                            urlPhoto: photoURL\n                        }\n    \n                        userRef.set(obj)\n                            \n                            setinputImg64(\"\")\n\n                            setIsModalVisible2(false); \n                            setProgress(false)\n                            setstatusButt(false)\n                    })\n                }\n            )\n        } else {\n            console.log(\"no upload\")\n        }\n    }\n\n{/* ////////////////////// Get Photo when every update */}\n    useEffect(() => {\n      if(userData.role){\n        storage.child(userData.role + \"/\" + currentUser.uid + \"/ProfilePic.jpg\")\n        .getDownloadURL()\n        .then((url) => {\n            setPic(url)\n      }).catch((err) => {\n        console.log(err)\n      });\n    } \n      \n      tempPic()\n    }, [userData.urlPhoto])\n\n    useEffect(() => {\n        // console.log()\n    }, [])\n    \n    return (\n        <div style={{textAlign: \"center\"}}>\n            <div className=\"container-fluid text-right \" style={Style.Header}>\n                <Header />\n            </div>\n\n            <div className=\"container-fluid mt-1 text-center border border-danger\" style={Style.Content}>\n                <div  className=\"row\">\n\n{/* ////////////////////// Side Menu */}\n                    <div className=\"col-12 col-sm-12 col-md-12 col-lg-2 col-xl- \">\n                        <div className=\"text-left\" style={{ width: 256 }}>\n                            <Button\n                            type=\"primary\"\n                            onClick={toggleCollapsed}\n                            style={{ marginBottom: 16 }}\n                            >\n\n                            {React.createElement(\n                                collapse ? MenuUnfoldOutlined : MenuFoldOutlined\n                            )}\n\n                            </Button>\n\n                            <Menu\n                            // defaultSelectedKeys={[\"1\"]}\n                            defaultOpenKeys={[\"sub1\"]}\n                            mode=\"inline\"\n                            theme=\"dark\"\n                            inlineCollapsed={collapse}\n                            >\n                                <Menu.Item key=\"1\" onClick={onButtonClick} icon={<PictureOutlined />}>\n                                    <input hidden type='file' id='file' accept=\"image/*\" ref={inputFile} style={{display: 'none'}} onChange={onInputChange}/>\n                                    เปลี่ยนรูป\n                                </Menu.Item>\n\n                                <Menu.Item key=\"2\" onClick={() => showModal(\"name\")} icon={<FontColorsOutlined />}>\n                                    แก้ไขชื่อ\n                                </Menu.Item>\n\n                                {userData.role === \"employee\"? (\n                                <>\n                                    <Menu.Item key=\"3\" onClick={() => showModal(\"age\")} icon={<EditOutlined />}>\n                                        แก้ไข อายุ\n                                    </Menu.Item>\n\n                                    <Menu.Item key=\"4\" icon={<OrderedListOutlined />}>\n                                        <a href=\"/masssagelists\" >\n                                            จัดการรายการนวด \n                                        </a>\n                                    </Menu.Item>\n                                </>\n                                ) : (null)}\n                            </Menu>\n                        </div>\n                    </div>\n\n{/* ////////////////////// Information */}\n                    <div className=\"col-12 col-sm-12 col-md-12 col-lg-10 col-xl- \">\n                        <div className=\"row\">\n                            <div className=\"col-12 my-5 text-left\">\n                              <h3>ข้อมูลของฉัน</h3>  \n                              <Divider />\n                            </div>\n\n{/* ////////////////////// Picture */}\n                            <div className=\"col-12 col-sm-12 col-md-12 col-lg-5 col-xl- mb-5\">\n                                {pic ? (\n                                    loadingPic ? null : ( <img src={pic} style={{width: \"40%\"}} />) \n                                )  \n                                : (\n                                    loadingPic ? null : ( <img src=\"https://icons-for-free.com/iconfiles/png/512/instagram+person+profile+icon-1320184028516722357.png\" style={{width: \"10%\"}}/> ) \n                                )}\n                                \n                            </div>\n\n{/* ////////////////////// Description */}\n                            <div className=\"col-12 col-sm-12 col-md-12 col-lg-6 col-xl-  pl-5 \">\n                                <Descriptions title=\"\" className=\"\" style={{marginLeft: \"5vh\"}}>\n                                    <Descriptions.Item label=\"ชื่อผู้ใช้\">{ userData? userData.displayName : null}</Descriptions.Item><br/><br/>\n                                    {userData.role === \"member\"? (null) : ( \n                                    <><Descriptions.Item label=\"อายุ\">{userData.age}</Descriptions.Item><br/><br/></>)}\n                                   \n                                    <Descriptions.Item label={userData.role === \"member\"? \"จำนวนที่เข้าใช้บริการ\" : \"จำนวนผู้เข้าใช้บริการ\"}>{ userData? FilterReviewed.length : null}</Descriptions.Item><br/><br/>\n                                    \n                                    {userData.role !== \"member\"? (\n                                    <>\n                                        <Descriptions.Item label=\"คะแนน: \">{FilterReviewed.length !== 0?(\n                                            <p style={{color: \"#ff6d75\"}}>{finalStar} : { userData? (<StyledRating\n                                                className=\"\"\n                                                size=\"small\"\n                                                precision={0.1}\n                                                value={finalStar}\n                                                icon={<FavoriteIcon fontSize=\"inherit\" />}\n                                                readOnly\n                                            />) : null}</p>):(<p>ยังไม่มีการรีวิว</p>)}\n                                        </Descriptions.Item><br/><br/>\n                                        </>) : null}\n                                    \n                                </Descriptions>\n\n                                <Descriptions title=\"\" className=\"mt-4\" style={{marginLeft: \"5vh\"}}>\n                                    <Descriptions.Item label=\"Email\">{currentUser.email.slice(0,1)+\"***\"+currentUser.email.slice(4)}</Descriptions.Item><br/><br/>\n                                    <Descriptions.Item label=\"UID\">{ userData? userData.uid.slice(0,6)+\"***\"+userData.uid.slice(9) : null }</Descriptions.Item>\n                                </Descriptions>\n                            </div>\n                        </div>\n                        \n                    {/* still have unset picture delay */}\n\n{/* ////////////////////// Modal Chhange Name */}\n                        <Modal\n                            title={type === \"name\"? \"เปลี่ยนชื่อ\" : \"แก้ไข อายุ\"}\n                            visible={isModalVisible}\n                            onOk={(e)=>submitAction(e)}\n                            onCancel={()=>handleCancel()}\n                            closable={false}\n                            okButtonProps={ statusButt }\n                            cancelButtonProps={ statusButt }\n                            footer={[\n                                <Button key=\"back\" loading={statusButt} onClick={()=>handleCancel()}>\n                                  ย้อนกลับ\n                                </Button>,\n                                <Button key=\"submit\" type=\"primary\" loading={statusButt} onClick={(e)=>submitAction(e)}>\n                                  ตกลง\n                                </Button>,\n                              ]}\n                        >\n                            <div className=\"text-center\">\n                                {type === \"name\"? (\n                                    <input type=\"text\" value={changeName} onChange={(e) => handlechangeName(e)} placeholder=\"ชื่อใหม่\" />\n                                ) : (\n                                    <Select defaultValue={userData.age} style={{ width: 120 }} onChange={handlechangeAge}>\n                                        {Age}\n                                    </Select>\n                                )}\n                                \n\n                                {progress ? (\n                                    <div className=\"text-center\">\n                                        <div className=\"spinner-border mt-5 my-3\" role=\"status\"/><br/>\n                                        <span className=\"\">Uploading...</span>\n                                    </div>\n                                    \n                                ) : null}\n                            </div>\n                        </Modal>\n\n{/* ////////////////////// Modal Cropper */}\n                        <Modal\n                            title=\"Crop Image\"\n                            visible={isModalVisible2}\n                            onOk={(e)=>handleSubmitImage(e)}\n                            onCancel={handleCancel}\n                            closable={false}\n                            okButtonProps={ statusButt }\n                            cancelButtonProps={ statusButt }\n                            footer={[\n                                <Button key=\"back\" loading={statusButt} onClick={handleCancel}>\n                                  ย้อนกลับ\n                                </Button>,\n                                <Button key=\"submit\" type=\"primary\" loading={statusButt} onClick={(e)=>handleSubmitImage(e)}>\n                                  ตกลง\n                                </Button>,\n                              ]}\n                        >\n                            {inputImg64 ? (\n                                <ImageCropper getBlob={getBlob} inputImg64={inputImg64}/> \n                                ) : null }\n                            \n                            {progress ? (\n                                <div className=\"text-center\">\n                                    <div className=\"spinner-border mt-5 my-3\" role=\"status\"/><br/>\n                                    <span className=\"\">Uploading...</span>\n                                </div>\n                                \n                            ) : null}\n                        </Modal>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Profile\n\n// const useWidth = () => {\n//     const [ width, setWidth ] = useState(window.innerWidth)\n\n//     const widthHandler =()=>{\n//         setWidth(window.innerWidth)\n//     }\n\n//     useEffect(()=>{\n//         window.addEventListener(\"resize\", widthHandler)\n\n//         return()=>{\n//             window.removeEventListener(\"resize\", widthHandler)\n//         }\n//     }, [])\n\n//     return { width };\n// }","/Users/iris/majoramassage/src/Components/Auth.js",["106","107","108"],"import React, { useState, useEffect, createContext } from 'react'\nimport app from \"../Firebase/firebase\"\nimport { firestore } from '../Firebase/firebase'\n\nimport { Modal, Button } from 'antd';\n\nexport const AuthContext = React.createContext()\n\nexport const AuthProvider = ({ children }) => {\n    const [ currentUser, setCurrentUser ] = useState(null)\n    const [ loading, setLoading ] = useState(true)\n    \n    const [ userData, setUserData ] = useState()\n    const [ allEmployees, setallEmployees ] = useState([])\n\n    const userRef = firestore.collection(\"users\")\n\n    useEffect(() => {\n        app\n        .auth()\n        .onAuthStateChanged((user)=>{\n            if(user){\n                userRef.doc(user.uid)\n                .onSnapshot((doc)=>{\n                    if(doc.data()){\n                        const objDoc =  doc.data()\n                        // console.log(objDoc)\n                        // const userData = {\n                        //     uid: doc.data().uid,\n                        //     email: doc.data().email,\n                        //     role: doc.data().role,\n\n                        // }\n                        setUserData(objDoc)\n                    }\n                })\n            }\n            setCurrentUser(user)\n            setTimeout(() => {\n                setLoading(false)\n            }, 1000);\n            \n        })\n    }, [loading])\n\n    useEffect(() => {\n        const getEmployees = firestore\n        .collection(\"users\")\n        .where(\"role\", \"==\", \"employee\")\n        \n        getEmployees.onSnapshot((snapshot) => {\n            let tempArr = [] \n            snapshot.forEach((doc) => {\n                // console.log(doc.data())\n                tempArr = [ ...tempArr, doc.data() ]\n                // get from collection must foreach before use them T__T remember remember\n            })\n            \n            setallEmployees(tempArr)\n        })\n\n    }, [])\n\n    useEffect(() => {\n        // console.group(\"fromResponse\", currentUser)\n        // console.log(allEmployees)\n    }, [allEmployees])\n\n    if(loading){\n        return(\n            <div style={{textAlign: \"center\", marginTop: \"150px\"}}>\n                <h1>\n                    Loading . . . (Auth)\n                </h1>\n            </div>\n        )\n    }\n\n    return (\n        <AuthContext.Provider value={{ currentUser, userData, allEmployees, Modal }}>\n            {children}\n        </AuthContext.Provider>\n        \n    )\n}\n\n\n","/Users/iris/majoramassage/src/reportWebVitals.js",[],["109","110"],"/Users/iris/majoramassage/src/Components/Login.js",["111"],"import React, { useState, useEffect, useCallback, useContext } from 'react'\nimport { Redirect } from 'react-router'\nimport app from \"../Firebase/firebase\"\nimport { AuthContext } from \"./Auth\"\n\nconst Login = () => {\n    const { currentUser } = useContext(AuthContext)\n\n    const [ email, setEmail ] = useState('')\n    const [ password, setPassword ] = useState('')\n\n    const [ loading, setLoading ] = useState(true)\n\n    const handleLogin = async (event) => {\n        event.preventDefault();\n        \n        try{\n            await app\n            .auth()\n            .signInWithEmailAndPassword( email, password)\n            .then()\n            setLoading(true)\n\n            setTimeout(() => {\n                setLoading(false)\n            }, 2000)\n        }\n        catch(error){\n            alert(error)\n        }\n    }\n\n    useEffect(() => {\n        setTimeout(() => {\n            setLoading(false)\n        }, 2000);\n    }, [])\n\n    if( currentUser ){\n        return <Redirect to=\"/\" />\n    }\n\n    if ( loading ){\n        return(\n            <div style={{textAlign: \"center\", marginTop: \"150px\"}}>\n                <h1>\n                    <div className=\"spinner-border\" role=\"status\">\n                    </div>\n\n                    <div className=\"mt-5\">Loading . . . . (Login)</div>\n                </h1>\n            </div>\n        )\n    }\n\n    return (\n        <div style={{textAlign: \"center\", marginTop: \"150px\"}}>\n            <h1>Login</h1>\n\n            <form onSubmit= {handleLogin}>\n                <label className=\"mt-5\">\n                    Email <br/>\n                    <input \n                        required\n                        type=\"email\" \n                        placeholder=\"Email\" \n                        onChange={(e)=>{setEmail(e.target.value)}} />\n                </label><br/>\n\n                <label className=\"mt-2\">\n                    Password <br/>\n                    <input \n                        required\n                        type=\"password\" \n                        placeholder=\"Password\" \n                        onChange={(e)=>{setPassword(e.target.value)}} />\n                </label><br/>\n\n                <button className=\"mt-3 btn btn-primary\" type=\"submit\">Login</button>\n               \n            </form>\n            <button className=\"mt-3 btn btn-info\" >\n                <a href=\"/register\" className=\"text-light\" style={{textDecoration: \"none\"}}>\n                Register \n                </a>\n            </button>\n        </div>\n    )\n}\n\nexport default Login\n",["112","113"],"/Users/iris/majoramassage/src/index.js",[],"/Users/iris/majoramassage/src/Components/Register.js",["114","115","116","117"],"/Users/iris/majoramassage/src/App.js",["118"],"import React,{ useState, useEffect, useContext} from 'react';\nimport './App.css';\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport { firestore } from './Firebase/firebase'\n\nimport { AuthProvider } from \"./Components/Auth\";\n\nimport Home from \"./Components/Home\";\nimport Profile from \"./Components/Profile\";\nimport Login from \"./Components/Login\";\nimport Register from \"./Components/Register\";\nimport Information from \"./Components/Information\";\nimport MassageList from './Components/MassageList'\nimport Booking from \"./Components/Booking\";\nimport LoggedinRoute from \"./Components/Routes/LoggedinRoute\";\n\nimport AdminRoute from \"./Components/Routes/AdminRoute\";\nimport AdminPage from \"./Components/AdminPage\";\n\nimport EmployeeRoute from './Components//Routes/EmployeeRoute';\nconst App = () => {\n  const [ allEmployees, setAllEmployees ] = useState([])\n\n  useEffect(() => {\n    const getEmployees = firestore\n    .collection(\"users\")\n    .where(\"role\", \"==\", \"employee\")\n    \n    getEmployees\n    .onSnapshot((snapshot) => {\n        let tempArr = [] \n        snapshot.forEach((doc) => {\n            // console.log(doc.data())\n            tempArr = [ ...tempArr, doc.data() ]\n            // get from collection must foreach before use them T__T remember remember\n        })\n\n        // console.log( tempArr )\n        \n        setAllEmployees(tempArr)\n    })\n  }, [])\n\n\n  useEffect(() => {\n    // console.log(allEmployees)\n  }, [allEmployees])\n\n  return (\n    <AuthProvider>\n      <Router>\n        <div>\n          \n          <AdminRoute exact path=\"/admin\" component={ AdminPage } />\n\n          <LoggedinRoute exact path=\"/profile\" component={ Profile } />\n          <LoggedinRoute exact path=\"/booking\" component={ Booking } />\n          \n          <EmployeeRoute exact path=\"/masssagelists\" component={ MassageList } />\n          <Route exact path=\"/\" component={ Home } />\n          <Route exact path=\"/login\" component={ Login } />\n          <Route exact path=\"/register\" component={ Register } />\n\n\n          {allEmployees.map((item, index) => {\n            // console.log(item.createed)\n           return <Route exact key={index} path={\"/em/\" + item.createed} render={() => <Information allEmployees={ item } />} />\n          })}\n          \n\n        </div>\n      </Router>\n    </AuthProvider>\n  );\n}\n\nexport default App;\n",["119","120"],"/Users/iris/majoramassage/src/Components/AdminPage.js",["121","122","123","124","125"],"import React, { useContext, useEffect, useState } from 'react'\n\nimport app, { firestore, storage } from \"../Firebase/firebase\"\n\nimport Header from \"./Parts/Header\"\n\nimport ImageCropper from './ImageCropper'\n\nimport { AuthContext } from \"./Auth\"\n\nfunction AdminPage() {\n    const { currentUser, userData, Modal } = useContext(AuthContext)\n\n    const [isModalVisible, setIsModalVisible] = useState(false);\n    const [statusButt, setstatusButt] = useState({ disabled: false });\n\n    const [pic, setPic] = useState(\"\")\n\n    const [ file, setFile ] = useState(\"\")\n\n    const [blob, setBlob] = useState(null)\n    const [inputImg64, setinputImg64] = useState('')\n\n    const [ loadingPic, setLoadingPic ] = useState(true)\n    const [ progress, setProgress ] = useState(false)\n\n    const upPicRef = storage.child(userData.role + \"/\" + currentUser.uid )\n\n    const tempPic = () => {\n        setTimeout(() => {\n            setLoadingPic(false)\n        }, 1000);\n    }\n\n    const getBlob = (blob) => {\n        // blob คือ ตัวไฟล์รูป ข้อมูลไฟล์รูปที่ได้มาจาก children \n        setBlob(blob)\n    }\n\n    const onInputChange = (e) => {\n        // convert image file to base64 string\n\n        const file = e.target.files[0]\n        \n        if(file){\n            const isLt2M = file.size / 1024 / 1024 > 5;\n            if (!isLt2M) {\n                setFile(file)\n\n                const reader = new FileReader()\n        \n                reader.onload = () => {\n                    setinputImg64(reader.result)\n                    // รูปที่ encode เป็น base64 แล้ว\n                }\n        \n                if (file) {\n                    reader.readAsDataURL(file)\n                    setIsModalVisible(true);\n                } \n            } else{ alert('Image must smaller than 5MB!')}\n        } else{ return null}\n    }\n\n    const handleSubmitImage = async (e) => {\n        e.preventDefault()\n        if( file ) {\n            const fileName = \"ProfilePic.jpg\";\n            const targetRef = upPicRef.child(fileName)\n            const uploadTask = targetRef.put(blob, { contentType: blob.type })\n\n            const userRef = firestore.collection(\"users\").doc(userData.uid)\n\n            const getDoc = await userRef.get()\n            const objDoc = await getDoc.data()\n\n            setProgress(true)\n            setstatusButt({ disabled: true })\n\n            uploadTask.on(\n                \"state_changed\", \n                ()=>{},\n                (error) => {\n                    console.log(error)\n                },\n                () => {\n                    setFile(\"\")\n\n                    uploadTask\n                    .snapshot\n                    .ref\n                    .getDownloadURL()\n                    .then(( photoURL ) => {\n                        const obj = {\n                            ...objDoc,\n                            urlPhoto: photoURL\n                        }\n    \n                        userRef\n                        .set(obj)\n\n                        setTimeout(() => {\n                            setinputImg64(\"\")\n\n                            setIsModalVisible(false); \n                            setProgress(false)\n                            setstatusButt({ disabled: false })\n                        }, 2000);\n                            \n                        \n                    })\n                    \n                }\n            )\n        } else{\n            console.log(\"no upload\")\n        }\n    }\n\n    // const showModal = () => {\n    //     setIsModalVisible(true);\n    //   };\n    \n    //   const handleOk = () => {\n    //     setIsModalVisible(false);\n    //   };\n    \n      const handleCancel = () => {\n        setIsModalVisible(false);\n        // setFile(\"\")\n      };\n\n    // useEffect(() => {\n    //     // console.log(currentUser)\n    //     // console.log(userData)\n    //     console.log(file)\n    // }, [file])\n\n    useEffect(() => {\n        tempPic()\n    }, [])\n\n    // storage.child(userData.role + \"/\" + currentUser.uid + \"/ProfilePic.jpg\")\n    //     .getDownloadURL()\n    //     .then((url) => {\n    //         setPic(url)\n    //     // This can be inserted into an <img> tag\n    //   }).catch((err) => {\n    //     console.log(err)\n    //   });\n    \n\n    const Style = {\n        Header: {\n            height: \"7vh\"\n        },\n        Content: {\n            height: \"92vh\"\n        }\n    }\n\n    return (\n        <div className='text-center'>\n             {/* <div className=\"container-fluid text-right border border-danger \" style={Style.Header} >\n             <button className=\"mt-3 btn btn-info\" >\n                <a href=\"/profile\" className=\"text-light\" style={{textDecoration: \"none\"}}>\n                Profile \n                </a>\n            </button>\n             </div> */}\n\n             <div className=\"container-fluid mt-1 border border-danger\" style={Style.Content}>\n                 {/* {pic ? (\n                    loadingPic ? null : ( <img src={pic} style={{width: \"20%\"}} />) \n                )  \n                : (\n                    loadingPic ? null : ( <img src=\"https://icons-for-free.com/iconfiles/png/512/instagram+person+profile+icon-1320184028516722357.png\" style={{width: \"10%\"}}/> ) \n                )} */}\n\n                <form>\n                    <div className=\"custom-file\">\n                        <input\n                            type=\"file\"\n                            // className=\"custom-file-input\"\n                            // id=\"customFile\"\n                            accept=\"image/*\"\n                            onChange={ onInputChange }\n                        />\n\n                    <input type=\"file\" id=\"myfile\" name=\"myfile\"/>\n\n                        {/* <label \n                            className=\"custom-file-label w-50 ml-5\"\n                            htmlFor=\"customFile\">\n                            {!file? <div>Browse Pic</div> : <div>{file.name}</div>}\n                        </label> */}\n                    </div>\n                </form>\n                \n                <Modal\n                    title=\"Crop Image\"\n                    visible={isModalVisible}\n                    onOk={(e)=>handleSubmitImage(e)}\n                    onCancel={handleCancel}\n                    closable={false}\n                    okButtonProps={ statusButt }\n                    cancelButtonProps={ statusButt }\n                >\n                    {inputImg64 ? (\n                        <ImageCropper getBlob={getBlob} inputImg64={inputImg64}/> \n                        ) : (\n                            null\n                        )\n                    }\n                    \n                    {progress ? (\n                        <div className=\"text-center\">\n                            <div className=\"spinner-border mt-5 my-3\" role=\"status\"/><br/>\n                            <span className=\"\">Uploading...</span>\n                        </div>\n                        \n                    ) : null}\n                </Modal>\n\n             </div>\n        </div>\n    )\n}\n\nexport default AdminPage\n","/Users/iris/majoramassage/src/Components/Information.js",["126","127","128","129","130","131","132","133","134","135","136","137"],"/Users/iris/majoramassage/src/Firebase/firebase.js",[],["138","139"],"/Users/iris/majoramassage/src/Components/cropImage.js",[],"/Users/iris/majoramassage/src/Components/ImageCropper.js",[],"/Users/iris/majoramassage/src/Components/MassageList.js",["140","141","142","143","144","145","146"],"import React, { useEffect, useContext, useState } from 'react'\n\nimport app, { firestore, storage } from \"../Firebase/firebase\"\n\nimport { Table, Space, Divider } from \"antd\";\n// import { difference, intersection } from 'lodash';\n\nimport Header from \"./Parts/Header\"\n\nimport { AuthContext } from \"./Auth\"\n\nfunction MassageList() {\n    const { currentUser, userData } = useContext(AuthContext)\n    const { Column, ColumnGroup } = Table;\n\n    const [ allMassageLitsts, setAllmassageLists ] = useState([])\n    const [ individiList, setindividiList ] = useState([])\n\n    const [ finalAllMassageLitsts, setfinalAllMassageLitsts ] = useState([])\n    const [ finalIndividiList, setfinalIndividiList ] = useState([])\n\n    const Style = {\n        Header: {\n            height: \"7vh\"\n        },\n        // preContent: {\n        //     height: \"30vh\"\n        // },\n        Content: {\n            minHeight: \"92vh\"\n        }\n    }\n\n    //Get allMassageLists and Set currntUser List :อันดับแรก\n    useEffect(() => {\n        const getAllMassageLists = firestore\n        .collection(\"massageLists\")\n        .doc(\"allMassageLitsts\")\n\n        getAllMassageLists\n        .onSnapshot((snapshot)=>{\n            const rawData = snapshot.data()\n            const finalData = rawData.listMassage\n\n            // console.log(finalData)\n            let tempArr = []\n            finalData.forEach((doc)=>{\n                tempArr = [ ...tempArr, doc]\n            })\n\n            setAllmassageLists(tempArr)\n        })\n\n        setindividiList(userData.listMassage)\n\n        //ติดตาม userData เพราะเวลาอัพเดทค่าจะได้มา trig useEffect นี้ทำงาน\n    }, [userData])\n\n    //แจกข้อมูลไป 2 ส่วน :อันดับสอง\n    useEffect(() => {\n\n        //Show AllList which not occur in IndividualList (เอาเฉพาะ AllList ที่ไม่มีใน IndividualList) (Different)\n        let finalAll = allMassageLitsts.filter(All => {\n            return !individiList.some(Indivi => Indivi.id === All.id)})\n        // console.log(\"AllLeft\", finalAll)\n\n            setfinalAllMassageLitsts(finalAll)\n\n        //Show IndividualList which not occur in AllList (เอาเฉพาะ IndividualList ที่มีใน AllList) (จริงๆไม่ได้มีก็ได้เพราะ แค่เอา List ของ พนักงานมาแสดง =____=) (Intersection)\n        let finalIndivi = allMassageLitsts.filter(All => {\n            return individiList.some(Indivi => Indivi.id === All.id)})\n        // console.log(\"IndiviLeft\", finalIndivi)\n\n            setfinalIndividiList(finalIndivi)\n\n    }, [allMassageLitsts])\n\n\n    useEffect(() => {\n        // console.log(finalAllMassageLitsts)\n        // console.log(finalIndividiList)\n    }, [finalAllMassageLitsts, finalIndividiList])\n\n    const AddData = async ( Selected ) => {\n        try{\n\n            const userRef = firestore.collection(\"users\").doc(userData.uid)\n            \n            const getDoc = await userRef.get()\n            const objDoc = await getDoc.data()\n           \n\n            let tempArr = []\n\n            tempArr = [ ...finalIndividiList, Selected ] //ตบข้อมูลเก่ามา พร้อมยัดข้อมูลใหม่เข้าไปด้วย Put prevData and newData together \n            // console.log(tempArr)\n\n            const obj = {\n                ...objDoc,\n                listMassage: tempArr\n            }\n            userRef.set(obj) \n\n        } catch (err) {\n            console.log(err)\n        }\n    }\n\n    const DeleteData = async ( Selected ) => {\n        try{\n\n            const userRef = firestore.collection(\"users\").doc(userData.uid)\n\n            const getDoc = await userRef.get()\n            const objDoc = await getDoc.data()\n\n           \n            let finalDelete = finalIndividiList.filter(Indivi => {\n                return ![Selected].some(SelectedList => SelectedList.id === Indivi.id)\n            }) //Different : Return finalIndividiList ที่ไม่มี Selected \n\n            // let Diff = _.difference(finalIndividiList, [Selected]) // Lodash version\n\n            const obj = {\n                ...objDoc,\n                listMassage: finalDelete\n            }\n            userRef.set(obj)\n\n        } catch (err) {\n            console.log(err)\n        }\n    }\n\n   \n\n    return (\n        <div>\n            <div className=\"container-fluid text-right border border-danger \" style={Style.Header}>\n                <Header />\n            </div>\n\n            <div className=\"container-fluid mt-1 text-center  border border-danger\" style={Style.Content}>\n\n                <div className=\"\" >\n                    <div className=\"row justify-content-center \">\n                        <div style={{width: \"50%\"}}>\n\n                        <h1>storeLists</h1>\n\n                        <Table dataSource={finalAllMassageLitsts}  pagination={false} rowKey=\"id\" >\n                            <Column title=\"id\" dataIndex=\"id\" key=\"id\" />\n                            <Column title=\"name\" dataIndex=\"name\" />\n                            <Column title=\"price\" dataIndex=\"price\"  />\n                            <Column\n                            title=\"Action\"\n                            key=\"action\"\n                            render={(text, record, index) => (\n                                <Space size=\"middle\">\n                                    <a style={{color: \"green\"}} onClick={() => { AddData(text) }}>เพิ่ม</a>\n                                </Space>\n                            )}\n                            />\n                        </Table>\n                        </div>\n                        \n                    </div>\n                    \n\n                    <Divider />\n\n                    <div className=\"row justify-content-center \">\n                        <div style={{width: \"50%\"}}>\n\n                        <h1>individiList</h1>\n\n                            <Table dataSource={finalIndividiList} pagination={false} rowKey=\"id\" >\n                                <Column title=\"id\" dataIndex=\"id\" key=\"id\" />\n                                <Column title=\"name\" dataIndex=\"name\" />\n                                <Column title=\"price\" dataIndex=\"price\"  />\n                                <Column\n                                title=\"Action\"\n                                key=\"action\"\n                                render={(text, record) => (\n                                    <Space size=\"middle\">\n                                        <a style={{color: \"red\"}} onClick={() => { DeleteData(text)}}>ลบ</a>\n                                    </Space>\n                                )}\n                                />\n                            </Table>\n                        </div>\n                    </div>\n\n                </div>\n                \n\n            </div>\n            \n        </div>\n    )\n}\n\nexport default MassageList\n",["147","148"],"/Users/iris/majoramassage/src/Components/Parts/Header.js",["149","150","151","152","153","154","155"],"/Users/iris/majoramassage/src/Components/Routes/EmployeeRoute.js",["156"],"import React, { useContext } from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport { AuthContext } from \"../Auth\";\n\nconst EmployeeRoute = ({ component: RouteComponent, ...rest }) => {\n  const {currentUser, userData} = useContext(AuthContext);\n  return (\n    <Route\n      {...rest}\n      render={routeProps => \n        !!currentUser ? ( \n          userData.role == \"employee\"? ( \n              <RouteComponent {...routeProps} /> \n            )\n            : ( \n            <Redirect to={\"/login\"} /> \n          ))\n        : ( \n        <Redirect to={\"/login\"} /> \n        )\n      }\n    />\n  );\n};\n\n\nexport default EmployeeRoute","/Users/iris/majoramassage/src/Components/Routes/LoggedinRoute.js",[],"/Users/iris/majoramassage/src/Components/Booking.js",["157","158","159","160","161","162","163","164","165","166","167","168","169","170","171","172","173","174","175","176","177","178","179","180","181","182","183"],{"ruleId":"184","severity":1,"message":"185","line":3,"column":8,"nodeType":"186","messageId":"187","endLine":3,"endColumn":11},{"ruleId":"184","severity":1,"message":"188","line":3,"column":15,"nodeType":"186","messageId":"187","endLine":3,"endColumn":24},{"ruleId":"184","severity":1,"message":"189","line":13,"column":5,"nodeType":"186","messageId":"187","endLine":13,"endColumn":6},{"ruleId":"184","severity":1,"message":"190","line":18,"column":13,"nodeType":"186","messageId":"187","endLine":18,"endColumn":24},{"ruleId":"191","severity":1,"message":"192","line":72,"column":8,"nodeType":"193","endLine":72,"endColumn":10,"suggestions":"194"},{"ruleId":"191","severity":1,"message":"195","line":77,"column":8,"nodeType":"193","endLine":77,"endColumn":21,"suggestions":"196"},{"ruleId":"197","severity":1,"message":"198","line":105,"column":33,"nodeType":"199","endLine":105,"endColumn":85},{"ruleId":"197","severity":1,"message":"198","line":107,"column":33,"nodeType":"199","endLine":107,"endColumn":170},{"ruleId":"200","severity":1,"message":"201","line":120,"column":66,"nodeType":"202","messageId":"203","endLine":120,"endColumn":68},{"ruleId":"184","severity":1,"message":"185","line":3,"column":8,"nodeType":"186","messageId":"187","endLine":3,"endColumn":11},{"ruleId":"204","severity":1,"message":"205","line":99,"column":1,"nodeType":"206","messageId":"207","endLine":99,"endColumn":51},{"ruleId":"204","severity":1,"message":"205","line":105,"column":1,"nodeType":"206","messageId":"207","endLine":105,"endColumn":52},{"ruleId":"204","severity":1,"message":"205","line":113,"column":1,"nodeType":"206","messageId":"207","endLine":113,"endColumn":50},{"ruleId":"204","severity":1,"message":"205","line":146,"column":1,"nodeType":"206","messageId":"207","endLine":146,"endColumn":48},{"ruleId":"204","severity":1,"message":"205","line":165,"column":1,"nodeType":"206","messageId":"207","endLine":165,"endColumn":45},{"ruleId":"204","severity":1,"message":"205","line":191,"column":1,"nodeType":"206","messageId":"207","endLine":191,"endColumn":44},{"ruleId":"204","severity":1,"message":"205","line":247,"column":1,"nodeType":"206","messageId":"207","endLine":247,"endColumn":59},{"ruleId":"191","severity":1,"message":"208","line":260,"column":8,"nodeType":"193","endLine":260,"endColumn":27,"suggestions":"209"},{"ruleId":"197","severity":1,"message":"198","line":334,"column":59,"nodeType":"199","endLine":334,"endColumn":99},{"ruleId":"197","severity":1,"message":"198","line":337,"column":59,"nodeType":"199","endLine":337,"endColumn":193},{"ruleId":"184","severity":1,"message":"210","line":1,"column":38,"nodeType":"186","messageId":"187","endLine":1,"endColumn":51},{"ruleId":"184","severity":1,"message":"211","line":5,"column":17,"nodeType":"186","messageId":"187","endLine":5,"endColumn":23},{"ruleId":"191","severity":1,"message":"212","line":44,"column":8,"nodeType":"193","endLine":44,"endColumn":17,"suggestions":"213"},{"ruleId":"214","replacedBy":"215"},{"ruleId":"216","replacedBy":"217"},{"ruleId":"184","severity":1,"message":"218","line":1,"column":38,"nodeType":"186","messageId":"187","endLine":1,"endColumn":49},{"ruleId":"214","replacedBy":"219"},{"ruleId":"216","replacedBy":"220"},{"ruleId":"184","severity":1,"message":"218","line":1,"column":38,"nodeType":"186","messageId":"187","endLine":1,"endColumn":49},{"ruleId":"221","severity":1,"message":"222","line":35,"column":38,"nodeType":"223","messageId":"224","endLine":35,"endColumn":40},{"ruleId":"221","severity":1,"message":"222","line":49,"column":46,"nodeType":"223","messageId":"224","endLine":49,"endColumn":48},{"ruleId":"221","severity":1,"message":"222","line":72,"column":31,"nodeType":"223","messageId":"224","endLine":72,"endColumn":33},{"ruleId":"184","severity":1,"message":"225","line":1,"column":37,"nodeType":"186","messageId":"187","endLine":1,"endColumn":47},{"ruleId":"214","replacedBy":"226"},{"ruleId":"216","replacedBy":"227"},{"ruleId":"184","severity":1,"message":"185","line":3,"column":8,"nodeType":"186","messageId":"187","endLine":3,"endColumn":11},{"ruleId":"184","severity":1,"message":"228","line":5,"column":8,"nodeType":"186","messageId":"187","endLine":5,"endColumn":14},{"ruleId":"184","severity":1,"message":"229","line":17,"column":12,"nodeType":"186","messageId":"187","endLine":17,"endColumn":15},{"ruleId":"184","severity":1,"message":"230","line":17,"column":17,"nodeType":"186","messageId":"187","endLine":17,"endColumn":23},{"ruleId":"184","severity":1,"message":"231","line":24,"column":13,"nodeType":"186","messageId":"187","endLine":24,"endColumn":23},{"ruleId":"184","severity":1,"message":"185","line":3,"column":8,"nodeType":"186","messageId":"187","endLine":3,"endColumn":11},{"ruleId":"184","severity":1,"message":"232","line":3,"column":26,"nodeType":"186","messageId":"187","endLine":3,"endColumn":33},{"ruleId":"184","severity":1,"message":"233","line":31,"column":13,"nodeType":"186","messageId":"187","endLine":31,"endColumn":21},{"ruleId":"184","severity":1,"message":"234","line":33,"column":13,"nodeType":"186","messageId":"187","endLine":33,"endColumn":21},{"ruleId":"184","severity":1,"message":"190","line":35,"column":13,"nodeType":"186","messageId":"187","endLine":35,"endColumn":24},{"ruleId":"204","severity":1,"message":"205","line":73,"column":1,"nodeType":"206","messageId":"207","endLine":73,"endColumn":48},{"ruleId":"204","severity":1,"message":"205","line":100,"column":1,"nodeType":"206","messageId":"207","endLine":100,"endColumn":43},{"ruleId":"204","severity":1,"message":"205","line":203,"column":1,"nodeType":"206","messageId":"207","endLine":203,"endColumn":40},{"ruleId":"204","severity":1,"message":"205","line":223,"column":1,"nodeType":"206","messageId":"207","endLine":223,"endColumn":45},{"ruleId":"204","severity":1,"message":"205","line":235,"column":1,"nodeType":"206","messageId":"207","endLine":235,"endColumn":42},{"ruleId":"191","severity":1,"message":"235","line":247,"column":8,"nodeType":"193","endLine":247,"endColumn":10,"suggestions":"236"},{"ruleId":"197","severity":1,"message":"198","line":267,"column":29,"nodeType":"199","endLine":267,"endColumn":140},{"ruleId":"214","replacedBy":"237"},{"ruleId":"216","replacedBy":"238"},{"ruleId":"184","severity":1,"message":"185","line":3,"column":8,"nodeType":"186","messageId":"187","endLine":3,"endColumn":11},{"ruleId":"184","severity":1,"message":"232","line":3,"column":26,"nodeType":"186","messageId":"187","endLine":3,"endColumn":33},{"ruleId":"184","severity":1,"message":"190","line":13,"column":13,"nodeType":"186","messageId":"187","endLine":13,"endColumn":24},{"ruleId":"184","severity":1,"message":"239","line":14,"column":21,"nodeType":"186","messageId":"187","endLine":14,"endColumn":32},{"ruleId":"191","severity":1,"message":"240","line":76,"column":8,"nodeType":"193","endLine":76,"endColumn":26,"suggestions":"241"},{"ruleId":"242","severity":1,"message":"243","line":160,"column":37,"nodeType":"199","endLine":160,"endColumn":99},{"ruleId":"242","severity":1,"message":"243","line":186,"column":41,"nodeType":"199","endLine":186,"endColumn":103},{"ruleId":"214","replacedBy":"244"},{"ruleId":"216","replacedBy":"245"},{"ruleId":"184","severity":1,"message":"188","line":3,"column":15,"nodeType":"186","messageId":"187","endLine":3,"endColumn":24},{"ruleId":"184","severity":1,"message":"232","line":3,"column":26,"nodeType":"186","messageId":"187","endLine":3,"endColumn":33},{"ruleId":"184","severity":1,"message":"246","line":5,"column":24,"nodeType":"186","messageId":"187","endLine":5,"endColumn":31},{"ruleId":"184","severity":1,"message":"247","line":16,"column":13,"nodeType":"186","messageId":"187","endLine":16,"endColumn":23},{"ruleId":"184","severity":1,"message":"248","line":16,"column":25,"nodeType":"186","messageId":"187","endLine":16,"endColumn":38},{"ruleId":"184","severity":1,"message":"249","line":21,"column":36,"nodeType":"186","messageId":"187","endLine":21,"endColumn":48},{"ruleId":"221","severity":1,"message":"222","line":64,"column":71,"nodeType":"223","messageId":"224","endLine":64,"endColumn":73},{"ruleId":"221","severity":1,"message":"222","line":12,"column":25,"nodeType":"223","messageId":"224","endLine":12,"endColumn":27},{"ruleId":"184","severity":1,"message":"185","line":3,"column":8,"nodeType":"186","messageId":"187","endLine":3,"endColumn":11},{"ruleId":"184","severity":1,"message":"232","line":3,"column":26,"nodeType":"186","messageId":"187","endLine":3,"endColumn":33},{"ruleId":"184","severity":1,"message":"190","line":18,"column":13,"nodeType":"186","messageId":"187","endLine":18,"endColumn":24},{"ruleId":"204","severity":1,"message":"205","line":81,"column":1,"nodeType":"206","messageId":"207","endLine":81,"endColumn":44},{"ruleId":"221","severity":1,"message":"222","line":84,"column":29,"nodeType":"223","messageId":"224","endLine":84,"endColumn":31},{"ruleId":"221","severity":1,"message":"222","line":89,"column":28,"nodeType":"223","messageId":"224","endLine":89,"endColumn":30},{"ruleId":"221","severity":1,"message":"222","line":95,"column":30,"nodeType":"223","messageId":"224","endLine":95,"endColumn":32},{"ruleId":"221","severity":1,"message":"222","line":96,"column":30,"nodeType":"223","messageId":"224","endLine":96,"endColumn":32},{"ruleId":"221","severity":1,"message":"222","line":101,"column":26,"nodeType":"223","messageId":"224","endLine":101,"endColumn":28},{"ruleId":"204","severity":1,"message":"205","line":109,"column":1,"nodeType":"206","messageId":"207","endLine":109,"endColumn":47},{"ruleId":"204","severity":1,"message":"205","line":116,"column":1,"nodeType":"206","messageId":"207","endLine":116,"endColumn":45},{"ruleId":"221","severity":1,"message":"222","line":129,"column":33,"nodeType":"223","messageId":"224","endLine":129,"endColumn":35},{"ruleId":"204","severity":1,"message":"205","line":143,"column":1,"nodeType":"206","messageId":"207","endLine":143,"endColumn":43},{"ruleId":"221","severity":1,"message":"222","line":159,"column":37,"nodeType":"223","messageId":"224","endLine":159,"endColumn":39},{"ruleId":"204","severity":1,"message":"205","line":184,"column":1,"nodeType":"206","messageId":"207","endLine":184,"endColumn":43},{"ruleId":"221","severity":1,"message":"222","line":187,"column":29,"nodeType":"223","messageId":"224","endLine":187,"endColumn":31},{"ruleId":"197","severity":1,"message":"198","line":203,"column":41,"nodeType":"199","endLine":203,"endColumn":135},{"ruleId":"221","severity":1,"message":"222","line":234,"column":46,"nodeType":"223","messageId":"224","endLine":234,"endColumn":48},{"ruleId":"221","severity":1,"message":"222","line":237,"column":56,"nodeType":"223","messageId":"224","endLine":237,"endColumn":58},{"ruleId":"221","severity":1,"message":"222","line":247,"column":76,"nodeType":"223","messageId":"224","endLine":247,"endColumn":78},{"ruleId":"204","severity":1,"message":"205","line":325,"column":1,"nodeType":"206","messageId":"207","endLine":325,"endColumn":47},{"ruleId":"204","severity":1,"message":"205","line":332,"column":1,"nodeType":"206","messageId":"207","endLine":332,"endColumn":45},{"ruleId":"204","severity":1,"message":"205","line":359,"column":1,"nodeType":"206","messageId":"207","endLine":359,"endColumn":45},{"ruleId":"204","severity":1,"message":"205","line":399,"column":1,"nodeType":"206","messageId":"207","endLine":399,"endColumn":40},{"ruleId":"204","severity":1,"message":"205","line":418,"column":1,"nodeType":"206","messageId":"207","endLine":418,"endColumn":42},{"ruleId":"204","severity":1,"message":"205","line":425,"column":1,"nodeType":"206","messageId":"207","endLine":425,"endColumn":49},{"ruleId":"197","severity":1,"message":"198","line":492,"column":29,"nodeType":"199","endLine":492,"endColumn":122},"no-unused-vars","'app' is defined but never used.","Identifier","unusedVar","'firestore' is defined but never used.","'_' is assigned a value but never used.","'currentUser' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'allEmployees'. Either include it or remove the dependency array.","ArrayExpression",["250"],"React Hook useEffect has a missing dependency: 'userData.Favorite'. Either include it or remove the dependency array.",["251"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","array-callback-return","Array.prototype.some() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","React Hook useEffect has missing dependencies: 'currentUser.uid' and 'userData.role'. Either include them or remove the dependency array.",["252"],"'createContext' is defined but never used.","'Button' is defined but never used.","React Hook useEffect has a missing dependency: 'userRef'. Either include it or remove the dependency array.",["253"],"no-native-reassign",["254"],"no-negated-in-lhs",["255"],"'useCallback' is defined but never used.",["254"],["255"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'useContext' is defined but never used.",["254"],["255"],"'Header' is defined but never used.","'pic' is assigned a value but never used.","'setPic' is assigned a value but never used.","'loadingPic' is assigned a value but never used.","'storage' is defined but never used.","'DateTime' is assigned a value but never used.","'progress' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'copyQueue'. Either include it or remove the dependency array.",["256"],["254"],["255"],"'ColumnGroup' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'individiList'. Either include it or remove the dependency array.",["257"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md",["254"],["255"],"'Divider' is defined but never used.","'pixelValue' is assigned a value but never used.","'setPixelValue' is assigned a value but never used.","'allEmployees' is assigned a value but never used.",{"desc":"258","fix":"259"},{"desc":"260","fix":"261"},{"desc":"262","fix":"263"},{"desc":"264","fix":"265"},"no-global-assign","no-unsafe-negation",{"desc":"266","fix":"267"},{"desc":"268","fix":"269"},"Update the dependencies array to be: [allEmployees]",{"range":"270","text":"271"},"Update the dependencies array to be: [allFavorite, userData.Favorite]",{"range":"272","text":"273"},"Update the dependencies array to be: [currentUser.uid, userData.role, userData.urlPhoto]",{"range":"274","text":"275"},"Update the dependencies array to be: [loading, userRef]",{"range":"276","text":"277"},"Update the dependencies array to be: [copyQueue]",{"range":"278","text":"279"},"Update the dependencies array to be: [allMassageLitsts, individiList]",{"range":"280","text":"281"},[1881,1883],"[allEmployees]",[1992,2005],"[allFavorite, userData.Favorite]",[7455,7474],"[currentUser.uid, userData.role, userData.urlPhoto]",[1374,1383],"[loading, userRef]",[8258,8260],"[copyQueue]",[2440,2458],"[allMassageLitsts, individiList]"]