[{"/Users/iris/majoramassage/src/Components/Home.js":"1","/Users/iris/majoramassage/src/Components/Profile.js":"2","/Users/iris/majoramassage/src/Components/Auth.js":"3","/Users/iris/majoramassage/src/reportWebVitals.js":"4","/Users/iris/majoramassage/src/Components/Login.js":"5","/Users/iris/majoramassage/src/index.js":"6","/Users/iris/majoramassage/src/Components/Register.js":"7","/Users/iris/majoramassage/src/App.js":"8","/Users/iris/majoramassage/src/Components/AdminPage.js":"9","/Users/iris/majoramassage/src/Components/Information.js":"10","/Users/iris/majoramassage/src/Firebase/firebase.js":"11","/Users/iris/majoramassage/src/Components/cropImage.js":"12","/Users/iris/majoramassage/src/Components/ImageCropper.js":"13","/Users/iris/majoramassage/src/Components/MassageList.js":"14","/Users/iris/majoramassage/src/Components/Parts/Header.js":"15","/Users/iris/majoramassage/src/Components/Routes/EmployeeRoute.js":"16","/Users/iris/majoramassage/src/Components/Routes/LoggedinRoute.js":"17"},{"size":2112,"mtime":1607617335244,"results":"18","hashOfConfig":"19"},{"size":5373,"mtime":1608136573552,"results":"20","hashOfConfig":"19"},{"size":2451,"mtime":1608179603748,"results":"21","hashOfConfig":"19"},{"size":362,"mtime":1606503430657,"results":"22","hashOfConfig":"19"},{"size":2525,"mtime":1606901877592,"results":"23","hashOfConfig":"19"},{"size":530,"mtime":1607537569111,"results":"24","hashOfConfig":"19"},{"size":5648,"mtime":1608133544017,"results":"25","hashOfConfig":"19"},{"size":2232,"mtime":1607793425723,"results":"26","hashOfConfig":"19"},{"size":6743,"mtime":1607617417533,"results":"27","hashOfConfig":"19"},{"size":11043,"mtime":1608202952381,"results":"28","hashOfConfig":"19"},{"size":604,"mtime":1606926058768,"results":"29","hashOfConfig":"19"},{"size":1025,"mtime":1607597381261,"results":"30","hashOfConfig":"19"},{"size":1263,"mtime":1607597126353,"results":"31","hashOfConfig":"19"},{"size":7081,"mtime":1607781678888,"results":"32","hashOfConfig":"19"},{"size":2235,"mtime":1608030515442,"results":"33","hashOfConfig":"19"},{"size":644,"mtime":1607793456386,"results":"34","hashOfConfig":"19"},{"size":524,"mtime":1607793150957,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"39"},"q2mra1",{"filePath":"40","messages":"41","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"42","messages":"43","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"50"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"57"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"50"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"50"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"75"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"78","messages":"79","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/iris/majoramassage/src/Components/Home.js",["83","84","85","86","87","88","89"],"import React, { useContext, useEffect, useState } from 'react'\n\nimport app, { firestore } from '../Firebase/firebase'\n\nimport Header from \"./Parts/Header\"\n\nimport { AuthContext } from \"./Auth\"\n\nfunction Home() {\n    const { currentUser, userData, allEmployees } = useContext(AuthContext)\n\n    const Style = {\n        Header: {\n            height: \"7vh\"\n        },\n        preContent: {\n            height: \"30vh\"\n        },\n        Content: {\n            height: \"62vh\",\n            \n        }\n    }\n\n    useEffect(() => {\n        // console.log(\"loggedInUser:\", userData) \n    }, [])\n    \n    return (\n        <div>\n            <div className=\"container-fluid text-right border border-danger \" style={Style.Header}>\n                <Header />\n            </div>\n                \n            \n\n            <div className=\"container-fluid mt-1 border border-danger\" style={Style.preContent}>\n                xxxx\n            </div>\n\n            <div className=\"container-fluid mt-1 text-center border border-danger\" style={Style.Content}>\n                <div className=\"row text-center\"> \n                {allEmployees.map((item, index) => {\n                    return(\n                        <a href={\"/em/\" + item.createed} key={index}>\n                             <div className=\"card mx-5 my-5 text-center\" style={{width: \"13rem\"}} > \n                            {item.urlPhoto ? (\n                                <img className=\"card-img-top\" src={item.urlPhoto} />\n                            ) : (\n                                <img className=\"card-img-top\" src=\"https://icons-for-free.com/iconfiles/png/512/instagram+person+profile+icon-1320184028516722357.png\" />\n\n                            )}\n                            <div className=\"card-body\">\n                                <h5 className=\"card-title\">น้อง{item.displayName}</h5>\n                            </div>\n                        </div>\n                        </a>\n                       \n                    )\n\n                })}\n                 </div>   \n            </div>\n        </div>\n    )\n}\n\nexport default Home\n",["90","91"],"/Users/iris/majoramassage/src/Components/Profile.js",["92","93","94","95"],"/Users/iris/majoramassage/src/Components/Auth.js",["96","97","98"],"/Users/iris/majoramassage/src/reportWebVitals.js",[],["99","100"],"/Users/iris/majoramassage/src/Components/Login.js",["101"],"import React, { useState, useEffect, useCallback, useContext } from 'react'\nimport { Redirect } from 'react-router'\nimport app from \"../Firebase/firebase\"\nimport { AuthContext } from \"./Auth\"\n\nconst Login = () => {\n    const { currentUser } = useContext(AuthContext)\n\n    const [ email, setEmail ] = useState('')\n    const [ password, setPassword ] = useState('')\n\n    const [ loading, setLoading ] = useState(true)\n\n    const handleLogin = async (event) => {\n        event.preventDefault();\n        \n        try{\n            await app\n            .auth()\n            .signInWithEmailAndPassword( email, password)\n            .then()\n            setLoading(true)\n\n            setTimeout(() => {\n                setLoading(false)\n            }, 2000)\n        }\n        catch(error){\n            alert(error)\n        }\n    }\n\n    useEffect(() => {\n        setTimeout(() => {\n            setLoading(false)\n        }, 2000);\n    }, [])\n\n    if( currentUser ){\n        return <Redirect to=\"/\" />\n    }\n\n    if ( loading ){\n        return(\n            <div style={{textAlign: \"center\", marginTop: \"150px\"}}>\n                <h1>\n                    <div className=\"spinner-border\" role=\"status\">\n                    </div>\n\n                    <div className=\"mt-5\">Loading . . . . (Login)</div>\n                </h1>\n            </div>\n        )\n    }\n\n    return (\n        <div style={{textAlign: \"center\", marginTop: \"150px\"}}>\n            <h1>Login</h1>\n\n            <form onSubmit= {handleLogin}>\n                <label className=\"mt-5\">\n                    Email <br/>\n                    <input \n                        required\n                        type=\"email\" \n                        placeholder=\"Email\" \n                        onChange={(e)=>{setEmail(e.target.value)}} />\n                </label><br/>\n\n                <label className=\"mt-2\">\n                    Password <br/>\n                    <input \n                        required\n                        type=\"password\" \n                        placeholder=\"Password\" \n                        onChange={(e)=>{setPassword(e.target.value)}} />\n                </label><br/>\n\n                <button className=\"mt-3 btn btn-primary\" type=\"submit\">Login</button>\n               \n            </form>\n            <button className=\"mt-3 btn btn-info\" >\n                <a href=\"/register\" className=\"text-light\" style={{textDecoration: \"none\"}}>\n                Register \n                </a>\n            </button>\n        </div>\n    )\n}\n\nexport default Login\n",["102","103"],"/Users/iris/majoramassage/src/index.js",[],["104","105"],"/Users/iris/majoramassage/src/Components/Register.js",["106","107","108","109"],"import React, { useState, useEffect, useCallback, useContext } from 'react'\nimport { Redirect } from 'react-router'\nimport app  from \"../Firebase/firebase\"\n\nimport { AuthContext } from \"./Auth\"\nimport { firestore } from '../Firebase/firebase'\n\nconst Register = ( {history} ) => {\n    const { currentUser } = useContext(AuthContext)\n\n    const [ email, setEmail ] = useState('')\n    const [ password, setPassword ] = useState('')\n\n    const [ loading, setLoading ] = useState(true)\n\n    const [ role, setRole ] = useState(null)\n\n    const handleRegister = async (event) => {\n        event.preventDefault();\n\n        if(role == null){\n            alert(\" plz select role\")\n        } else {\n            try{\n                await app\n                .auth()\n                .createUserWithEmailAndPassword( email, password)\n                .then( async (result) => {\n                    if( result ){\n                        const userRef = firestore.collection(\"users\")\n                        .doc(result.user.uid)\n    \n                        const doc = await userRef.get()\n                        if(!doc.data()) {\n                            if( role == \"member\"){\n                                await userRef.set({\n                                    uid: result.user.uid,\n                                    displayName: result.user.email\n                                        .substring(0, email.lastIndexOf(\"@\")),\n                                    email: result.user.email,\n                                    createed: new Date().valueOf(),\n                                    role: role,\n                                    queue: []\n                                })\n                            setLoading(true)\n\n                            } else if ( role == \"employee\"){\n                                    await userRef.set({\n                                        uid: result.user.uid,\n                                        displayName: result.user.email\n                                            .substring(0, email.lastIndexOf(\"@\")),\n                                        email: result.user.email,\n                                        createed: new Date().valueOf(),\n                                        role: role,\n                                        age: 0,\n                                        star: 0,\n                                        listMassage:[],\n                                        queue:[]\n                                    })\n                                setLoading(true)\n                            }\n                        }\n                    }\n                })\n            } \n            catch(error) {\n                console.log(error)\n    \n                if(error.code == \"auth/email-already-in-use\"){\n                    setLoading(true)\n    \n                    setTimeout(() => {\n                        setLoading(false)\n                        alert(error.message) \n                        history.push(\"/\")\n                    }, 2000);\n                    \n                } else {\n                    alert(error.message)\n                }\n            }\n        } \n        \n    }\n\n    useEffect(() => {\n        setTimeout(() => {\n            setLoading(false)\n        }, 2000);\n    }, [])\n\n    useEffect(() => {\n        console.log(role)\n\n    }, [role])\n\n    if( currentUser ){\n        return <Redirect to=\"/\" />\n    }\n\n    if(loading){\n        return(\n            <div style={{textAlign: \"center\", marginTop: \"150px\"}}>\n                <h1>\n                    <div className=\"spinner-border\" role=\"status\">\n                    </div>\n\n                    <div className=\"mt-5\">Loading . . . . (Register)</div>\n                </h1>\n            </div>\n        )\n    }\n\n    return (\n        <div style={{textAlign: \"center\", marginTop: \"150px\"}}>\n            <h1>Register</h1>\n\n            <form onSubmit= { handleRegister }>\n                <label className=\"mt-5\">\n                    Email <br/>\n                    <input \n                        required\n                        type=\"email\" \n                        placeholder=\"Email\" \n                        onChange={(e)=>{setEmail(e.target.value)}} />\n                </label><br/>\n\n                <label className=\"mt-2\">\n                    Password <br/>\n                    <input \n                        required\n                        type=\"password\" \n                        placeholder=\"Password\" \n                        onChange={(e)=>{setPassword(e.target.value)}} />\n                </label><br/>\n\n                <div className=\"form-check\">\n                <input className=\"form-check-input\" type=\"radio\" name=\"exampleRadios\" id=\"member\" value=\"member\"  onClick={(e)=> setRole(e.target.value)}/>\n                <label className=\"form-check-label\" >\n                   Register as member\n                </label>\n                </div>\n\n                <div className=\"form-check\">\n                <input className=\"form-check-input\" type=\"radio\" name=\"exampleRadios\" id=\"employee\" value=\"employee\" onClick={(e)=> setRole(e.target.value)}/>\n                <label className=\"form-check-label\" >\n                   Register as employee\n                </label>\n                </div>\n\n                <button className=\"mt-3 btn btn-primary\" type=\"submit\">Register</button>\n                \n            </form>\n\n            <button className=\"mt-3 btn btn-info\" >\n                <a href=\"/login\" className=\"text-light\" style={{textDecoration: \"none\"}}>\n                Login\n                </a>\n            </button>\n            \n        </div>\n    )\n}\n\nexport default Register\n",["110","111"],"/Users/iris/majoramassage/src/App.js",["112"],"import React,{ useState, useEffect, useContext} from 'react';\nimport './App.css';\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport { firestore } from './Firebase/firebase'\n\nimport { AuthProvider } from \"./Components/Auth\";\n\nimport Home from \"./Components/Home\";\nimport Profile from \"./Components/Profile\";\nimport Login from \"./Components/Login\";\nimport Register from \"./Components/Register\";\nimport Information from \"./Components/Information\";\nimport MassageList from './Components/MassageList'\nimport LoggedinRoute from \"./Components/Routes/LoggedinRoute\";\n\nimport AdminRoute from \"./Components/Routes/AdminRoute\";\nimport AdminPage from \"./Components/AdminPage\";\n\nimport EmployeeRoute from './Components//Routes/EmployeeRoute';\n\nconst App = () => {\n  const [ allEmployees, setAllEmployees ] = useState([])\n\n  useEffect(() => {\n    const getEmployees = firestore\n    .collection(\"users\")\n    .where(\"role\", \"==\", \"employee\")\n    \n    getEmployees\n    .onSnapshot((snapshot) => {\n        let tempArr = [] \n        snapshot.forEach((doc) => {\n            // console.log(doc.data())\n            tempArr = [ ...tempArr, doc.data() ]\n            // get from collection must foreach before use them T__T remember remember\n        })\n\n        // console.log( tempArr )\n        \n        setAllEmployees(tempArr)\n    })\n  }, [])\n\n\n  useEffect(() => {\n    // console.log(allEmployees)\n  }, [allEmployees])\n\n  return (\n    <AuthProvider>\n      <Router>\n        <div>\n          \n          <AdminRoute exact path=\"/admin\" component={ AdminPage } />\n\n          <LoggedinRoute exact path=\"/profile\" component={ Profile } />\n          \n          <EmployeeRoute exact path=\"/masssagelists\" component={ MassageList } />\n          <Route exact path=\"/\" component={ Home } />\n          <Route exact path=\"/login\" component={ Login } />\n          <Route exact path=\"/register\" component={ Register } />\n\n\n          {allEmployees.map((item, index) => {\n            // console.log(item.createed)\n           return <Route exact key={index} path={\"/em/\" + item.createed} render={() => <Information allEmployees={ item } />} />\n          })}\n          \n\n        </div>\n      </Router>\n    </AuthProvider>\n  );\n}\n\nexport default App;\n","/Users/iris/majoramassage/src/Components/AdminPage.js",["113","114","115","116","117","118"],"import React, { useContext, useEffect, useState } from 'react'\n\nimport app, { firestore, storage } from \"../Firebase/firebase\"\n\nimport Header from \"./Parts/Header\"\n\nimport ImageCropper from './ImageCropper'\n\n\n\nimport { AuthContext } from \"./Auth\"\n\nfunction AdminPage() {\n    const { currentUser, userData, Modal } = useContext(AuthContext)\n\n    const [isModalVisible, setIsModalVisible] = useState(false);\n    const [statusButt, setstatusButt] = useState({ disabled: false });\n\n    const [pic, setPic] = useState(\"\")\n\n    const [ file, setFile ] = useState(\"\")\n\n    const [blob, setBlob] = useState(null)\n    const [inputImg64, setinputImg64] = useState('')\n\n    const [ loadingPic, setLoadingPic ] = useState(true)\n    const [ progress, setProgress ] = useState(false)\n\n    const upPicRef = storage.child(userData.role + \"/\" + currentUser.uid )\n\n    const tempPic = () => {\n        setTimeout(() => {\n            setLoadingPic(false)\n        }, 1000);\n    }\n\n    const getBlob = (blob) => {\n        // blob คือ ตัวไฟล์รูป ข้อมูลไฟล์รูปที่ได้มาจาก children \n        setBlob(blob)\n    }\n\n    const onInputChange = (e) => {\n        // convert image file to base64 string\n\n        const file = e.target.files[0]\n       \n        setFile(file)\n\n        const reader = new FileReader()\n\n        reader.onload = () => {\n            setinputImg64(reader.result)\n            // รูปที่ encode เป็น base64 แล้ว\n        }\n\n        if (file) {\n            reader.readAsDataURL(file)\n            setIsModalVisible(true);\n        } \n    \n    }\n\n    const handleSubmitImage = async (e) => {\n        e.preventDefault()\n        if( file ) {\n            const fileName = \"ProfilePic.jpg\";\n            const targetRef = upPicRef.child(fileName)\n            const uploadTask = targetRef.put(blob, { contentType: blob.type })\n\n            const userRef = firestore.collection(\"users\").doc(userData.uid)\n\n            const getDoc = await userRef.get()\n            const objDoc = await getDoc.data()\n\n            setProgress(true)\n            setstatusButt({ disabled: true })\n\n            uploadTask.on(\n                \"state_changed\", \n\n                ()=>{},\n\n                (error) => {\n                    console.log(error)\n                },\n\n                () => {\n                    setFile(\"\")\n\n                    uploadTask\n                    .snapshot\n                    .ref\n                    .getDownloadURL()\n                    .then(( photoURL ) => {\n                        const obj = {\n                            ...objDoc,\n                            urlPhoto: photoURL\n                        }\n    \n                        userRef\n                        .set(obj)\n\n                        setTimeout(() => {\n                            setinputImg64(\"\")\n\n                            setIsModalVisible(false); \n                            setProgress(false)\n                            setstatusButt({ disabled: false })\n                        }, 2000);\n                            \n                        \n                    })\n                    \n                }\n            )\n        } else{\n            console.log(\"no upload\")\n        }\n    }\n\n    const showModal = () => {\n        setIsModalVisible(true);\n      };\n    \n      const handleOk = () => {\n        setIsModalVisible(false);\n      };\n    \n      const handleCancel = () => {\n        setIsModalVisible(false);\n        // setFile(\"\")\n      };\n\n    // useEffect(() => {\n    //     // console.log(currentUser)\n    //     // console.log(userData)\n    //     console.log(file)\n    // }, [file])\n\n    useEffect(() => {\n        tempPic()\n    }, [])\n\n    storage.child(userData.role + \"/\" + currentUser.uid + \"/ProfilePic.jpg\")\n        .getDownloadURL()\n        .then((url) => {\n            setPic(url)\n        // This can be inserted into an <img> tag\n      }).catch((err) => {\n        console.log(err)\n      });\n    \n\n    const Style = {\n        Header: {\n            height: \"7vh\"\n        },\n        Content: {\n            height: \"92vh\"\n        }\n    }\n\n    return (\n        <div className='text-center'>\n             <div className=\"container-fluid text-right border border-danger \" style={Style.Header} >\n             <button className=\"mt-3 btn btn-info\" >\n                <a href=\"/profile\" className=\"text-light\" style={{textDecoration: \"none\"}}>\n                Profile \n                </a>\n            </button>\n             </div>\n\n             <div className=\"container-fluid mt-1 border border-danger\" style={Style.Content}>\n                 {pic ? (\n                    loadingPic ? null : ( <img src={pic} style={{width: \"20%\"}} />) \n                )  \n                : (\n                    loadingPic ? null : ( <img src=\"https://icons-for-free.com/iconfiles/png/512/instagram+person+profile+icon-1320184028516722357.png\" style={{width: \"10%\"}}/> ) \n                )}\n\n                <h1>Form</h1>\n                <form>\n                    <div className=\"custom-file\">\n                        <input\n                            type=\"file\"\n                            className=\"custom-file-input\"\n                            id=\"customFile\"\n                            accept=\"image/*\"\n                            onChange={ onInputChange }\n                        />\n\n                        <label \n                            className=\"custom-file-label w-50 ml-5\"\n                            htmlFor=\"custpmFile\">\n                            {!file? <div>Browse Pic</div> : <div>{file.name}</div>}\n                        </label>\n                    </div>\n                </form>\n                \n                <Modal\n                    title=\"Crop Image\"\n                    visible={isModalVisible}\n                    onOk={(e)=>handleSubmitImage(e)}\n                    onCancel={handleCancel}\n                    closable={false}\n                    okButtonProps={ statusButt }\n                    cancelButtonProps={ statusButt }\n                >\n                    {inputImg64 ? (\n                        <ImageCropper getBlob={getBlob} inputImg64={inputImg64}/> \n                        ) : (\n                            null\n                        )\n                    }\n                    \n                    {progress ? (\n                        <div className=\"text-center\">\n                            <div className=\"spinner-border mt-5 my-3\" role=\"status\"/><br/>\n                            <span className=\"\">Uploading...</span>\n                        </div>\n                        \n                    ) : null}\n                </Modal>\n\n             </div>\n        </div>\n    )\n}\n\nexport default AdminPage\n","/Users/iris/majoramassage/src/Components/Information.js",["119","120","121","122","123","124","125","126","127","128","129","130"],"/Users/iris/majoramassage/src/Firebase/firebase.js",[],"/Users/iris/majoramassage/src/Components/cropImage.js",[],"/Users/iris/majoramassage/src/Components/ImageCropper.js",[],"/Users/iris/majoramassage/src/Components/MassageList.js",["131","132","133","134","135","136","137"],"import React, { useEffect, useContext, useState } from 'react'\n\nimport app, { firestore, storage } from \"../Firebase/firebase\"\n\nimport { Table, Space, Divider } from \"antd\";\n// import { difference, intersection } from 'lodash';\n\nimport Header from \"./Parts/Header\"\n\nimport { AuthContext } from \"./Auth\"\n\nfunction MassageList() {\n    const { currentUser, userData } = useContext(AuthContext)\n    const { Column, ColumnGroup } = Table;\n\n    const [ allMassageLitsts, setAllmassageLists ] = useState([])\n    const [ individiList, setindividiList ] = useState([])\n\n    const [ finalAllMassageLitsts, setfinalAllMassageLitsts ] = useState([])\n    const [ finalIndividiList, setfinalIndividiList ] = useState([])\n\n    const Style = {\n        Header: {\n            height: \"7vh\"\n        },\n        // preContent: {\n        //     height: \"30vh\"\n        // },\n        Content: {\n            minHeight: \"92vh\"\n        }\n    }\n\n    //Get allMassageLists and Set currntUser List :อันดับแรก\n    useEffect(() => {\n        const getAllMassageLists = firestore\n        .collection(\"massageLists\")\n        .doc(\"allMassageLitsts\")\n\n        getAllMassageLists\n        .onSnapshot((snapshot)=>{\n            const rawData = snapshot.data()\n            const finalData = rawData.listMassage\n\n            // console.log(finalData)\n            let tempArr = []\n            finalData.forEach((doc)=>{\n                tempArr = [ ...tempArr, doc]\n            })\n\n            setAllmassageLists(tempArr)\n        })\n\n        setindividiList(userData.listMassage)\n\n        //ติดตาม userData เพราะเวลาอัพเดทค่าจะได้มา trig useEffect นี้ทำงาน\n    }, [userData])\n\n    //แจกข้อมูลไป 2 ส่วน :อันดับสอง\n    useEffect(() => {\n\n        //Show AllList which not occur in IndividualList (เอาเฉพาะ AllList ที่ไม่มีใน IndividualList) (Different)\n        let finalAll = allMassageLitsts.filter(All => {\n            return !individiList.some(Indivi => Indivi.id === All.id)})\n        // console.log(\"AllLeft\", finalAll)\n\n            setfinalAllMassageLitsts(finalAll)\n\n        //Show IndividualList which not occur in AllList (เอาเฉพาะ IndividualList ที่มีใน AllList) (จริงๆไม่ได้มีก็ได้เพราะ แค่เอา List ของ พนักงานมาแสดง =____=) (Intersection)\n        let finalIndivi = allMassageLitsts.filter(All => {\n            return individiList.some(Indivi => Indivi.id === All.id)})\n        // console.log(\"IndiviLeft\", finalIndivi)\n\n            setfinalIndividiList(finalIndivi)\n\n    }, [allMassageLitsts])\n\n\n    useEffect(() => {\n        // console.log(finalAllMassageLitsts)\n        // console.log(finalIndividiList)\n    }, [finalAllMassageLitsts, finalIndividiList])\n\n    const AddData = async ( Selected ) => {\n        try{\n\n            const userRef = firestore.collection(\"users\").doc(userData.uid)\n            \n            const getDoc = await userRef.get()\n            const objDoc = await getDoc.data()\n           \n\n            let tempArr = []\n\n            tempArr = [ ...finalIndividiList, Selected ] //ตบข้อมูลเก่ามา พร้อมยัดข้อมูลใหม่เข้าไปด้วย Put prevData and newData together \n            // console.log(tempArr)\n\n            const obj = {\n                ...objDoc,\n                listMassage: tempArr\n            }\n            userRef.set(obj) \n\n        } catch (err) {\n            console.log(err)\n        }\n    }\n\n    const DeleteData = async ( Selected ) => {\n        try{\n\n            const userRef = firestore.collection(\"users\").doc(userData.uid)\n\n            const getDoc = await userRef.get()\n            const objDoc = await getDoc.data()\n\n           \n            let finalDelete = finalIndividiList.filter(Indivi => {\n                return ![Selected].some(SelectedList => SelectedList.id === Indivi.id)\n            }) //Different : Return finalIndividiList ที่ไม่มี Selected \n\n            // let Diff = _.difference(finalIndividiList, [Selected]) // Lodash version\n\n            const obj = {\n                ...objDoc,\n                listMassage: finalDelete\n            }\n            userRef.set(obj)\n\n        } catch (err) {\n            console.log(err)\n        }\n    }\n\n   \n\n    return (\n        <div>\n            <div className=\"container-fluid text-right border border-danger \" style={Style.Header}>\n                <Header />\n            </div>\n\n            <div className=\"container-fluid mt-1 text-center  border border-danger\" style={Style.Content}>\n\n                <div className=\"\" >\n                    <div className=\"row justify-content-center \">\n                        <div style={{width: \"50%\"}}>\n\n                        <h1>storeLists</h1>\n\n                        <Table dataSource={finalAllMassageLitsts}  pagination={false} rowKey=\"id\" >\n                            <Column title=\"id\" dataIndex=\"id\" key=\"id\" />\n                            <Column title=\"name\" dataIndex=\"name\" />\n                            <Column title=\"price\" dataIndex=\"price\"  />\n                            <Column\n                            title=\"Action\"\n                            key=\"action\"\n                            render={(text, record, index) => (\n                                <Space size=\"middle\">\n                                    <a style={{color: \"green\"}} onClick={() => { AddData(text) }}>เพิ่ม</a>\n                                </Space>\n                            )}\n                            />\n                        </Table>\n                        </div>\n                        \n                    </div>\n                    \n\n                    <Divider />\n\n                    <div className=\"row justify-content-center \">\n                        <div style={{width: \"50%\"}}>\n\n                        <h1>individiList</h1>\n\n                            <Table dataSource={finalIndividiList} pagination={false} rowKey=\"id\" >\n                                <Column title=\"id\" dataIndex=\"id\" key=\"id\" />\n                                <Column title=\"name\" dataIndex=\"name\" />\n                                <Column title=\"price\" dataIndex=\"price\"  />\n                                <Column\n                                title=\"Action\"\n                                key=\"action\"\n                                render={(text, record) => (\n                                    <Space size=\"middle\">\n                                        <a style={{color: \"red\"}} onClick={() => { DeleteData(text)}}>ลบ</a>\n                                    </Space>\n                                )}\n                                />\n                            </Table>\n                        </div>\n                    </div>\n\n                </div>\n                \n\n            </div>\n            \n        </div>\n    )\n}\n\nexport default MassageList\n",["138","139"],"/Users/iris/majoramassage/src/Components/Parts/Header.js",["140","141","142","143","144","145","146"],"/Users/iris/majoramassage/src/Components/Routes/EmployeeRoute.js",["147"],"import React, { useContext } from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport { AuthContext } from \"../Auth\";\n\nconst EmployeeRoute = ({ component: RouteComponent, ...rest }) => {\n  const {currentUser, userData} = useContext(AuthContext);\n  return (\n    <Route\n      {...rest}\n      render={routeProps => \n        !!currentUser ? ( \n          userData.role == \"employee\"? ( \n              <RouteComponent {...routeProps} /> \n            )\n            : ( \n            <Redirect to={\"/login\"} /> \n          ))\n        : ( \n        <Redirect to={\"/login\"} /> \n        )\n      }\n    />\n  );\n};\n\n\nexport default EmployeeRoute","/Users/iris/majoramassage/src/Components/Routes/LoggedinRoute.js",[],{"ruleId":"148","severity":1,"message":"149","line":1,"column":40,"nodeType":"150","messageId":"151","endLine":1,"endColumn":48},{"ruleId":"148","severity":1,"message":"152","line":3,"column":8,"nodeType":"150","messageId":"151","endLine":3,"endColumn":11},{"ruleId":"148","severity":1,"message":"153","line":3,"column":15,"nodeType":"150","messageId":"151","endLine":3,"endColumn":24},{"ruleId":"148","severity":1,"message":"154","line":10,"column":13,"nodeType":"150","messageId":"151","endLine":10,"endColumn":24},{"ruleId":"148","severity":1,"message":"155","line":10,"column":26,"nodeType":"150","messageId":"151","endLine":10,"endColumn":34},{"ruleId":"156","severity":1,"message":"157","line":48,"column":33,"nodeType":"158","endLine":48,"endColumn":85},{"ruleId":"156","severity":1,"message":"157","line":50,"column":33,"nodeType":"158","endLine":50,"endColumn":170},{"ruleId":"159","replacedBy":"160"},{"ruleId":"161","replacedBy":"162"},{"ruleId":"148","severity":1,"message":"152","line":3,"column":8,"nodeType":"150","messageId":"151","endLine":3,"endColumn":11},{"ruleId":"163","severity":1,"message":"164","line":105,"column":8,"nodeType":"165","endLine":105,"endColumn":10,"suggestions":"166"},{"ruleId":"156","severity":1,"message":"157","line":115,"column":43,"nodeType":"158","endLine":115,"endColumn":83},{"ruleId":"156","severity":1,"message":"157","line":118,"column":43,"nodeType":"158","endLine":118,"endColumn":177},{"ruleId":"148","severity":1,"message":"167","line":1,"column":38,"nodeType":"150","messageId":"151","endLine":1,"endColumn":51},{"ruleId":"148","severity":1,"message":"168","line":5,"column":17,"nodeType":"150","messageId":"151","endLine":5,"endColumn":23},{"ruleId":"163","severity":1,"message":"169","line":44,"column":8,"nodeType":"165","endLine":44,"endColumn":17,"suggestions":"170"},{"ruleId":"159","replacedBy":"171"},{"ruleId":"161","replacedBy":"172"},{"ruleId":"148","severity":1,"message":"173","line":1,"column":38,"nodeType":"150","messageId":"151","endLine":1,"endColumn":49},{"ruleId":"159","replacedBy":"174"},{"ruleId":"161","replacedBy":"175"},{"ruleId":"159","replacedBy":"176"},{"ruleId":"161","replacedBy":"177"},{"ruleId":"148","severity":1,"message":"173","line":1,"column":38,"nodeType":"150","messageId":"151","endLine":1,"endColumn":49},{"ruleId":"178","severity":1,"message":"179","line":35,"column":38,"nodeType":"180","messageId":"181","endLine":35,"endColumn":40},{"ruleId":"178","severity":1,"message":"179","line":47,"column":46,"nodeType":"180","messageId":"181","endLine":47,"endColumn":48},{"ruleId":"178","severity":1,"message":"179","line":69,"column":31,"nodeType":"180","messageId":"181","endLine":69,"endColumn":33},{"ruleId":"159","replacedBy":"182"},{"ruleId":"161","replacedBy":"183"},{"ruleId":"148","severity":1,"message":"184","line":1,"column":37,"nodeType":"150","messageId":"151","endLine":1,"endColumn":47},{"ruleId":"148","severity":1,"message":"152","line":3,"column":8,"nodeType":"150","messageId":"151","endLine":3,"endColumn":11},{"ruleId":"148","severity":1,"message":"185","line":5,"column":8,"nodeType":"150","messageId":"151","endLine":5,"endColumn":14},{"ruleId":"148","severity":1,"message":"186","line":121,"column":11,"nodeType":"150","messageId":"151","endLine":121,"endColumn":20},{"ruleId":"148","severity":1,"message":"187","line":125,"column":13,"nodeType":"150","messageId":"151","endLine":125,"endColumn":21},{"ruleId":"156","severity":1,"message":"157","line":175,"column":43,"nodeType":"158","endLine":175,"endColumn":83},{"ruleId":"156","severity":1,"message":"157","line":178,"column":43,"nodeType":"158","endLine":178,"endColumn":177},{"ruleId":"148","severity":1,"message":"152","line":3,"column":8,"nodeType":"150","messageId":"151","endLine":3,"endColumn":11},{"ruleId":"148","severity":1,"message":"188","line":3,"column":26,"nodeType":"150","messageId":"151","endLine":3,"endColumn":33},{"ruleId":"148","severity":1,"message":"189","line":25,"column":13,"nodeType":"150","messageId":"151","endLine":25,"endColumn":21},{"ruleId":"148","severity":1,"message":"190","line":27,"column":13,"nodeType":"150","messageId":"151","endLine":27,"endColumn":21},{"ruleId":"148","severity":1,"message":"154","line":30,"column":13,"nodeType":"150","messageId":"151","endLine":30,"endColumn":24},{"ruleId":"191","severity":1,"message":"192","line":45,"column":1,"nodeType":"193","messageId":"194","endLine":45,"endColumn":48},{"ruleId":"191","severity":1,"message":"192","line":72,"column":1,"nodeType":"193","messageId":"194","endLine":72,"endColumn":43},{"ruleId":"191","severity":1,"message":"192","line":141,"column":1,"nodeType":"193","messageId":"194","endLine":141,"endColumn":45},{"ruleId":"191","severity":1,"message":"192","line":153,"column":1,"nodeType":"193","messageId":"194","endLine":153,"endColumn":42},{"ruleId":"163","severity":1,"message":"195","line":165,"column":8,"nodeType":"165","endLine":165,"endColumn":10,"suggestions":"196"},{"ruleId":"156","severity":1,"message":"157","line":179,"column":29,"nodeType":"158","endLine":179,"endColumn":90},{"ruleId":"156","severity":1,"message":"157","line":181,"column":29,"nodeType":"158","endLine":181,"endColumn":141},{"ruleId":"148","severity":1,"message":"152","line":3,"column":8,"nodeType":"150","messageId":"151","endLine":3,"endColumn":11},{"ruleId":"148","severity":1,"message":"188","line":3,"column":26,"nodeType":"150","messageId":"151","endLine":3,"endColumn":33},{"ruleId":"148","severity":1,"message":"154","line":13,"column":13,"nodeType":"150","messageId":"151","endLine":13,"endColumn":24},{"ruleId":"148","severity":1,"message":"197","line":14,"column":21,"nodeType":"150","messageId":"151","endLine":14,"endColumn":32},{"ruleId":"163","severity":1,"message":"198","line":76,"column":8,"nodeType":"165","endLine":76,"endColumn":26,"suggestions":"199"},{"ruleId":"200","severity":1,"message":"201","line":160,"column":37,"nodeType":"158","endLine":160,"endColumn":99},{"ruleId":"200","severity":1,"message":"201","line":186,"column":41,"nodeType":"158","endLine":186,"endColumn":103},{"ruleId":"159","replacedBy":"202"},{"ruleId":"161","replacedBy":"203"},{"ruleId":"148","severity":1,"message":"204","line":1,"column":17,"nodeType":"150","messageId":"151","endLine":1,"endColumn":26},{"ruleId":"148","severity":1,"message":"149","line":1,"column":40,"nodeType":"150","messageId":"151","endLine":1,"endColumn":48},{"ruleId":"148","severity":1,"message":"153","line":3,"column":15,"nodeType":"150","messageId":"151","endLine":3,"endColumn":24},{"ruleId":"148","severity":1,"message":"188","line":3,"column":26,"nodeType":"150","messageId":"151","endLine":3,"endColumn":33},{"ruleId":"148","severity":1,"message":"205","line":8,"column":36,"nodeType":"150","messageId":"151","endLine":8,"endColumn":48},{"ruleId":"178","severity":1,"message":"179","line":14,"column":60,"nodeType":"180","messageId":"181","endLine":14,"endColumn":62},{"ruleId":"200","severity":1,"message":"206","line":20,"column":33,"nodeType":"158","endLine":20,"endColumn":100},{"ruleId":"178","severity":1,"message":"179","line":12,"column":25,"nodeType":"180","messageId":"181","endLine":12,"endColumn":27},"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'app' is defined but never used.","'firestore' is defined but never used.","'currentUser' is assigned a value but never used.","'userData' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-native-reassign",["207"],"no-negated-in-lhs",["208"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'currentUser.uid' and 'userData.role'. Either include them or remove the dependency array.","ArrayExpression",["209"],"'createContext' is defined but never used.","'Button' is defined but never used.","React Hook useEffect has a missing dependency: 'userRef'. Either include it or remove the dependency array.",["210"],["207"],["208"],"'useCallback' is defined but never used.",["207"],["208"],["207"],["208"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected",["207"],["208"],"'useContext' is defined but never used.","'Header' is defined but never used.","'showModal' is assigned a value but never used.","'handleOk' is assigned a value but never used.","'storage' is defined but never used.","'DateTime' is assigned a value but never used.","'progress' is assigned a value but never used.","no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","React Hook useEffect has a missing dependency: 'copyQueue'. Either include it or remove the dependency array.",["211"],"'ColumnGroup' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'individiList'. Either include it or remove the dependency array.",["212"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md",["207"],["208"],"'useEffect' is defined but never used.","'allEmployees' is assigned a value but never used.","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","no-global-assign","no-unsafe-negation",{"desc":"213","fix":"214"},{"desc":"215","fix":"216"},{"desc":"217","fix":"218"},{"desc":"219","fix":"220"},"Update the dependencies array to be: [currentUser.uid, userData.role]",{"range":"221","text":"222"},"Update the dependencies array to be: [loading, userRef]",{"range":"223","text":"224"},"Update the dependencies array to be: [copyQueue]",{"range":"225","text":"226"},"Update the dependencies array to be: [allMassageLitsts, individiList]",{"range":"227","text":"228"},[2459,2461],"[currentUser.uid, userData.role]",[1374,1383],"[loading, userRef]",[4828,4830],"[copyQueue]",[2440,2458],"[allMassageLitsts, individiList]"]