[{"/Users/iris/majoramassage/src/Components/Home.js":"1","/Users/iris/majoramassage/src/Components/Profile.js":"2","/Users/iris/majoramassage/src/Components/Auth.js":"3","/Users/iris/majoramassage/src/reportWebVitals.js":"4","/Users/iris/majoramassage/src/Components/Login.js":"5","/Users/iris/majoramassage/src/index.js":"6","/Users/iris/majoramassage/src/Components/Register.js":"7","/Users/iris/majoramassage/src/App.js":"8","/Users/iris/majoramassage/src/Components/AdminPage.js":"9","/Users/iris/majoramassage/src/Components/Information.js":"10","/Users/iris/majoramassage/src/Firebase/firebase.js":"11","/Users/iris/majoramassage/src/Components/cropImage.js":"12","/Users/iris/majoramassage/src/Components/ImageCropper.js":"13","/Users/iris/majoramassage/src/Components/MassageList.js":"14","/Users/iris/majoramassage/src/Components/Parts/Header.js":"15","/Users/iris/majoramassage/src/Components/Routes/EmployeeRoute.js":"16","/Users/iris/majoramassage/src/Components/Routes/LoggedinRoute.js":"17","/Users/iris/majoramassage/src/Components/Booking.js":"18"},{"size":2112,"mtime":1607617335244,"results":"19","hashOfConfig":"20"},{"size":11668,"mtime":1608658706739,"results":"21","hashOfConfig":"20"},{"size":2451,"mtime":1608179603748,"results":"22","hashOfConfig":"20"},{"size":362,"mtime":1606503430657,"results":"23","hashOfConfig":"20"},{"size":2525,"mtime":1606901877592,"results":"24","hashOfConfig":"20"},{"size":530,"mtime":1607537569111,"results":"25","hashOfConfig":"20"},{"size":5948,"mtime":1608282553035,"results":"26","hashOfConfig":"20"},{"size":2347,"mtime":1608543102521,"results":"27","hashOfConfig":"20"},{"size":6743,"mtime":1607617417533,"results":"28","hashOfConfig":"20"},{"size":21755,"mtime":1608566087510,"results":"29","hashOfConfig":"20"},{"size":604,"mtime":1606926058768,"results":"30","hashOfConfig":"20"},{"size":1025,"mtime":1607597381261,"results":"31","hashOfConfig":"20"},{"size":1263,"mtime":1607597126353,"results":"32","hashOfConfig":"20"},{"size":7081,"mtime":1608308957243,"results":"33","hashOfConfig":"20"},{"size":4516,"mtime":1608657428538,"results":"34","hashOfConfig":"20"},{"size":644,"mtime":1607793456386,"results":"35","hashOfConfig":"20"},{"size":524,"mtime":1607793150957,"results":"36","hashOfConfig":"20"},{"size":27689,"mtime":1608566030630,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"41"},"q2mra1",{"filePath":"42","messages":"43","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"44","messages":"45","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"53"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"49"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"62"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"62"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"53"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"75","messages":"76","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"78"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"81","messages":"82","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":27,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/iris/majoramassage/src/Components/Home.js",["88","89","90","91","92","93","94"],"import React, { useContext, useEffect, useState } from 'react'\n\nimport app, { firestore } from '../Firebase/firebase'\n\nimport Header from \"./Parts/Header\"\n\nimport { AuthContext } from \"./Auth\"\n\nfunction Home() {\n    const { currentUser, userData, allEmployees } = useContext(AuthContext)\n\n    const Style = {\n        Header: {\n            height: \"7vh\"\n        },\n        preContent: {\n            height: \"30vh\"\n        },\n        Content: {\n            height: \"62vh\",\n            \n        }\n    }\n\n    useEffect(() => {\n        // console.log(\"loggedInUser:\", userData) \n    }, [])\n    \n    return (\n        <div>\n            <div className=\"container-fluid text-right border border-danger \" style={Style.Header}>\n                <Header />\n            </div>\n                \n            \n\n            <div className=\"container-fluid mt-1 border border-danger\" style={Style.preContent}>\n                xxxx\n            </div>\n\n            <div className=\"container-fluid mt-1 text-center border border-danger\" style={Style.Content}>\n                <div className=\"row text-center\"> \n                {allEmployees.map((item, index) => {\n                    return(\n                        <a href={\"/em/\" + item.createed} key={index}>\n                             <div className=\"card mx-5 my-5 text-center\" style={{width: \"13rem\"}} > \n                            {item.urlPhoto ? (\n                                <img className=\"card-img-top\" src={item.urlPhoto} />\n                            ) : (\n                                <img className=\"card-img-top\" src=\"https://icons-for-free.com/iconfiles/png/512/instagram+person+profile+icon-1320184028516722357.png\" />\n\n                            )}\n                            <div className=\"card-body\">\n                                <h5 className=\"card-title\">น้อง{item.displayName}</h5>\n                            </div>\n                        </div>\n                        </a>\n                       \n                    )\n\n                })}\n                 </div>   \n            </div>\n        </div>\n    )\n}\n\nexport default Home\n",["95","96"],"/Users/iris/majoramassage/src/Components/Profile.js",["97","98","99","100"],"/Users/iris/majoramassage/src/Components/Auth.js",["101","102","103"],"import React, { useState, useEffect, createContext } from 'react'\nimport app from \"../Firebase/firebase\"\nimport { firestore } from '../Firebase/firebase'\n\nimport { Modal, Button } from 'antd';\n\nexport const AuthContext = React.createContext()\n\nexport const AuthProvider = ({ children }) => {\n    const [ currentUser, setCurrentUser ] = useState(null)\n    const [ loading, setLoading ] = useState(true)\n    \n    const [ userData, setUserData ] = useState()\n    const [ allEmployees, setallEmployees ] = useState([])\n\n    const userRef = firestore.collection(\"users\")\n\n    useEffect(() => {\n        app\n        .auth()\n        .onAuthStateChanged((user)=>{\n            if(user){\n                userRef.doc(user.uid)\n                .onSnapshot((doc)=>{\n                    if(doc.data()){\n                        const objDoc =  doc.data()\n                        // console.log(objDoc)\n                        // const userData = {\n                        //     uid: doc.data().uid,\n                        //     email: doc.data().email,\n                        //     role: doc.data().role,\n\n                        // }\n                        setUserData(objDoc)\n                    }\n                })\n            }\n            setCurrentUser(user)\n            setTimeout(() => {\n                setLoading(false)\n            }, 1000);\n            \n        })\n    }, [loading])\n\n    useEffect(() => {\n        const getEmployees = firestore\n        .collection(\"users\")\n        .where(\"role\", \"==\", \"employee\")\n        \n        getEmployees.onSnapshot((snapshot) => {\n            let tempArr = [] \n            snapshot.forEach((doc) => {\n                // console.log(doc.data())\n                tempArr = [ ...tempArr, doc.data() ]\n                // get from collection must foreach before use them T__T remember remember\n            })\n            \n            setallEmployees(tempArr)\n        })\n\n    }, [])\n\n    useEffect(() => {\n        // console.group(\"fromResponse\", currentUser)\n        // console.log(allEmployees)\n    }, [allEmployees])\n\n    if(loading){\n        return(\n            <div style={{textAlign: \"center\", marginTop: \"150px\"}}>\n                <h1>\n                    Loading . . . (Auth)\n                </h1>\n            </div>\n        )\n    }\n\n    return (\n        <AuthContext.Provider value={{ currentUser, userData, allEmployees, Modal }}>\n            {children}\n        </AuthContext.Provider>\n        \n    )\n}\n\n\n","/Users/iris/majoramassage/src/reportWebVitals.js",[],["104","105"],"/Users/iris/majoramassage/src/Components/Login.js",["106"],"import React, { useState, useEffect, useCallback, useContext } from 'react'\nimport { Redirect } from 'react-router'\nimport app from \"../Firebase/firebase\"\nimport { AuthContext } from \"./Auth\"\n\nconst Login = () => {\n    const { currentUser } = useContext(AuthContext)\n\n    const [ email, setEmail ] = useState('')\n    const [ password, setPassword ] = useState('')\n\n    const [ loading, setLoading ] = useState(true)\n\n    const handleLogin = async (event) => {\n        event.preventDefault();\n        \n        try{\n            await app\n            .auth()\n            .signInWithEmailAndPassword( email, password)\n            .then()\n            setLoading(true)\n\n            setTimeout(() => {\n                setLoading(false)\n            }, 2000)\n        }\n        catch(error){\n            alert(error)\n        }\n    }\n\n    useEffect(() => {\n        setTimeout(() => {\n            setLoading(false)\n        }, 2000);\n    }, [])\n\n    if( currentUser ){\n        return <Redirect to=\"/\" />\n    }\n\n    if ( loading ){\n        return(\n            <div style={{textAlign: \"center\", marginTop: \"150px\"}}>\n                <h1>\n                    <div className=\"spinner-border\" role=\"status\">\n                    </div>\n\n                    <div className=\"mt-5\">Loading . . . . (Login)</div>\n                </h1>\n            </div>\n        )\n    }\n\n    return (\n        <div style={{textAlign: \"center\", marginTop: \"150px\"}}>\n            <h1>Login</h1>\n\n            <form onSubmit= {handleLogin}>\n                <label className=\"mt-5\">\n                    Email <br/>\n                    <input \n                        required\n                        type=\"email\" \n                        placeholder=\"Email\" \n                        onChange={(e)=>{setEmail(e.target.value)}} />\n                </label><br/>\n\n                <label className=\"mt-2\">\n                    Password <br/>\n                    <input \n                        required\n                        type=\"password\" \n                        placeholder=\"Password\" \n                        onChange={(e)=>{setPassword(e.target.value)}} />\n                </label><br/>\n\n                <button className=\"mt-3 btn btn-primary\" type=\"submit\">Login</button>\n               \n            </form>\n            <button className=\"mt-3 btn btn-info\" >\n                <a href=\"/register\" className=\"text-light\" style={{textDecoration: \"none\"}}>\n                Register \n                </a>\n            </button>\n        </div>\n    )\n}\n\nexport default Login\n",["107","108"],"/Users/iris/majoramassage/src/index.js",[],"/Users/iris/majoramassage/src/Components/Register.js",["109","110","111","112"],"import React, { useState, useEffect, useCallback, useContext } from 'react'\nimport { Redirect } from 'react-router'\nimport app  from \"../Firebase/firebase\"\n\nimport { AuthContext } from \"./Auth\"\nimport { firestore } from '../Firebase/firebase'\n\nconst Register = ( {history} ) => {\n    const { currentUser } = useContext(AuthContext)\n\n    const [ email, setEmail ] = useState('')\n    const [ password, setPassword ] = useState('')\n\n    const [ loading, setLoading ] = useState(true)\n\n    const [ role, setRole ] = useState(null)\n\n    const handleRegister = async (event) => {\n        event.preventDefault();\n\n        if(role == null){\n            alert(\" plz select role\")\n        } else {\n            try{\n                await app\n                .auth()\n                .createUserWithEmailAndPassword( email, password)\n                .then( async (result) => {\n                    if( result ){\n                        const userRef = firestore.collection(\"users\")\n                        .doc(result.user.uid)\n    \n                        const doc = await userRef.get()\n                        if(!doc.data()) {\n                            if( role == \"member\"){\n                                await userRef.set({\n                                    uid: result.user.uid,\n                                    displayName: result.user.email\n                                        .substring(0, email.lastIndexOf(\"@\")),\n                                    email: result.user.email,\n                                    createed: new Date().valueOf(),\n                                    role: role,\n                                    urlPhoto: \"https://icons-for-free.com/iconfiles/png/512/instagram+person+profile+icon-1320184028516722357.png\",\n                                    queue: []\n                                })\n                            setLoading(true)\n\n                            } else if ( role == \"employee\"){\n                                    await userRef.set({\n                                        uid: result.user.uid,\n                                        displayName: result.user.email\n                                            .substring(0, email.lastIndexOf(\"@\")),\n                                        email: result.user.email,\n                                        createed: new Date().valueOf(),\n                                        role: role,\n                                        urlPhoto: \"https://icons-for-free.com/iconfiles/png/512/instagram+person+profile+icon-1320184028516722357.png\",\n                                        age: 0,\n                                        star: 0,\n                                        listMassage:[],\n                                        queue:[]\n                                    })\n                                setLoading(true)\n                            }\n                        }\n                    }\n                })\n            } \n            catch(error) {\n                console.log(error)\n    \n                if(error.code == \"auth/email-already-in-use\"){\n                    setLoading(true)\n    \n                    setTimeout(() => {\n                        setLoading(false)\n                        alert(error.message) \n                        history.push(\"/\")\n                    }, 2000);\n                    \n                } else {\n                    alert(error.message)\n                }\n            }\n        } \n        \n    }\n\n    useEffect(() => {\n        setTimeout(() => {\n            setLoading(false)\n        }, 2000);\n    }, [])\n\n    useEffect(() => {\n        console.log(role)\n\n    }, [role])\n\n    if( currentUser ){\n        return <Redirect to=\"/\" />\n    }\n\n    if(loading){\n        return(\n            <div style={{textAlign: \"center\", marginTop: \"150px\"}}>\n                <h1>\n                    <div className=\"spinner-border\" role=\"status\">\n                    </div>\n\n                    <div className=\"mt-5\">Loading . . . . (Register)</div>\n                </h1>\n            </div>\n        )\n    }\n\n    return (\n        <div style={{textAlign: \"center\", marginTop: \"150px\"}}>\n            <h1>Register</h1>\n\n            <form onSubmit= { handleRegister }>\n                <label className=\"mt-5\">\n                    Email <br/>\n                    <input \n                        required\n                        type=\"email\" \n                        placeholder=\"Email\" \n                        onChange={(e)=>{setEmail(e.target.value)}} />\n                </label><br/>\n\n                <label className=\"mt-2\">\n                    Password <br/>\n                    <input \n                        required\n                        type=\"password\" \n                        placeholder=\"Password\" \n                        onChange={(e)=>{setPassword(e.target.value)}} />\n                </label><br/>\n\n                <div className=\"form-check\">\n                <input className=\"form-check-input\" type=\"radio\" name=\"exampleRadios\" id=\"member\" value=\"member\"  onClick={(e)=> setRole(e.target.value)}/>\n                <label className=\"form-check-label\" >\n                   Register as member\n                </label>\n                </div>\n\n                <div className=\"form-check\">\n                <input className=\"form-check-input\" type=\"radio\" name=\"exampleRadios\" id=\"employee\" value=\"employee\" onClick={(e)=> setRole(e.target.value)}/>\n                <label className=\"form-check-label\" >\n                   Register as employee\n                </label>\n                </div>\n\n                <button className=\"mt-3 btn btn-primary\" type=\"submit\">Register</button>\n                \n            </form>\n\n            <button className=\"mt-3 btn btn-info\" >\n                <a href=\"/login\" className=\"text-light\" style={{textDecoration: \"none\"}}>\n                Login\n                </a>\n            </button>\n            \n        </div>\n    )\n}\n\nexport default Register\n","/Users/iris/majoramassage/src/App.js",["113"],"import React,{ useState, useEffect, useContext} from 'react';\nimport './App.css';\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport { firestore } from './Firebase/firebase'\n\nimport { AuthProvider } from \"./Components/Auth\";\n\nimport Home from \"./Components/Home\";\nimport Profile from \"./Components/Profile\";\nimport Login from \"./Components/Login\";\nimport Register from \"./Components/Register\";\nimport Information from \"./Components/Information\";\nimport MassageList from './Components/MassageList'\nimport Booking from \"./Components/Booking\";\nimport LoggedinRoute from \"./Components/Routes/LoggedinRoute\";\n\nimport AdminRoute from \"./Components/Routes/AdminRoute\";\nimport AdminPage from \"./Components/AdminPage\";\n\nimport EmployeeRoute from './Components//Routes/EmployeeRoute';\nconst App = () => {\n  const [ allEmployees, setAllEmployees ] = useState([])\n\n  useEffect(() => {\n    const getEmployees = firestore\n    .collection(\"users\")\n    .where(\"role\", \"==\", \"employee\")\n    \n    getEmployees\n    .onSnapshot((snapshot) => {\n        let tempArr = [] \n        snapshot.forEach((doc) => {\n            // console.log(doc.data())\n            tempArr = [ ...tempArr, doc.data() ]\n            // get from collection must foreach before use them T__T remember remember\n        })\n\n        // console.log( tempArr )\n        \n        setAllEmployees(tempArr)\n    })\n  }, [])\n\n\n  useEffect(() => {\n    // console.log(allEmployees)\n  }, [allEmployees])\n\n  return (\n    <AuthProvider>\n      <Router>\n        <div>\n          \n          <AdminRoute exact path=\"/admin\" component={ AdminPage } />\n\n          <LoggedinRoute exact path=\"/profile\" component={ Profile } />\n          <LoggedinRoute exact path=\"/booking\" component={ Booking } />\n          \n          <EmployeeRoute exact path=\"/masssagelists\" component={ MassageList } />\n          <Route exact path=\"/\" component={ Home } />\n          <Route exact path=\"/login\" component={ Login } />\n          <Route exact path=\"/register\" component={ Register } />\n\n\n          {allEmployees.map((item, index) => {\n            // console.log(item.createed)\n           return <Route exact key={index} path={\"/em/\" + item.createed} render={() => <Information allEmployees={ item } />} />\n          })}\n          \n\n        </div>\n      </Router>\n    </AuthProvider>\n  );\n}\n\nexport default App;\n",["114","115"],"/Users/iris/majoramassage/src/Components/AdminPage.js",["116","117","118","119","120","121"],"import React, { useContext, useEffect, useState } from 'react'\n\nimport app, { firestore, storage } from \"../Firebase/firebase\"\n\nimport Header from \"./Parts/Header\"\n\nimport ImageCropper from './ImageCropper'\n\n\n\nimport { AuthContext } from \"./Auth\"\n\nfunction AdminPage() {\n    const { currentUser, userData, Modal } = useContext(AuthContext)\n\n    const [isModalVisible, setIsModalVisible] = useState(false);\n    const [statusButt, setstatusButt] = useState({ disabled: false });\n\n    const [pic, setPic] = useState(\"\")\n\n    const [ file, setFile ] = useState(\"\")\n\n    const [blob, setBlob] = useState(null)\n    const [inputImg64, setinputImg64] = useState('')\n\n    const [ loadingPic, setLoadingPic ] = useState(true)\n    const [ progress, setProgress ] = useState(false)\n\n    const upPicRef = storage.child(userData.role + \"/\" + currentUser.uid )\n\n    const tempPic = () => {\n        setTimeout(() => {\n            setLoadingPic(false)\n        }, 1000);\n    }\n\n    const getBlob = (blob) => {\n        // blob คือ ตัวไฟล์รูป ข้อมูลไฟล์รูปที่ได้มาจาก children \n        setBlob(blob)\n    }\n\n    const onInputChange = (e) => {\n        // convert image file to base64 string\n\n        const file = e.target.files[0]\n       \n        setFile(file)\n\n        const reader = new FileReader()\n\n        reader.onload = () => {\n            setinputImg64(reader.result)\n            // รูปที่ encode เป็น base64 แล้ว\n        }\n\n        if (file) {\n            reader.readAsDataURL(file)\n            setIsModalVisible(true);\n        } \n    \n    }\n\n    const handleSubmitImage = async (e) => {\n        e.preventDefault()\n        if( file ) {\n            const fileName = \"ProfilePic.jpg\";\n            const targetRef = upPicRef.child(fileName)\n            const uploadTask = targetRef.put(blob, { contentType: blob.type })\n\n            const userRef = firestore.collection(\"users\").doc(userData.uid)\n\n            const getDoc = await userRef.get()\n            const objDoc = await getDoc.data()\n\n            setProgress(true)\n            setstatusButt({ disabled: true })\n\n            uploadTask.on(\n                \"state_changed\", \n\n                ()=>{},\n\n                (error) => {\n                    console.log(error)\n                },\n\n                () => {\n                    setFile(\"\")\n\n                    uploadTask\n                    .snapshot\n                    .ref\n                    .getDownloadURL()\n                    .then(( photoURL ) => {\n                        const obj = {\n                            ...objDoc,\n                            urlPhoto: photoURL\n                        }\n    \n                        userRef\n                        .set(obj)\n\n                        setTimeout(() => {\n                            setinputImg64(\"\")\n\n                            setIsModalVisible(false); \n                            setProgress(false)\n                            setstatusButt({ disabled: false })\n                        }, 2000);\n                            \n                        \n                    })\n                    \n                }\n            )\n        } else{\n            console.log(\"no upload\")\n        }\n    }\n\n    const showModal = () => {\n        setIsModalVisible(true);\n      };\n    \n      const handleOk = () => {\n        setIsModalVisible(false);\n      };\n    \n      const handleCancel = () => {\n        setIsModalVisible(false);\n        // setFile(\"\")\n      };\n\n    // useEffect(() => {\n    //     // console.log(currentUser)\n    //     // console.log(userData)\n    //     console.log(file)\n    // }, [file])\n\n    useEffect(() => {\n        tempPic()\n    }, [])\n\n    storage.child(userData.role + \"/\" + currentUser.uid + \"/ProfilePic.jpg\")\n        .getDownloadURL()\n        .then((url) => {\n            setPic(url)\n        // This can be inserted into an <img> tag\n      }).catch((err) => {\n        console.log(err)\n      });\n    \n\n    const Style = {\n        Header: {\n            height: \"7vh\"\n        },\n        Content: {\n            height: \"92vh\"\n        }\n    }\n\n    return (\n        <div className='text-center'>\n             <div className=\"container-fluid text-right border border-danger \" style={Style.Header} >\n             <button className=\"mt-3 btn btn-info\" >\n                <a href=\"/profile\" className=\"text-light\" style={{textDecoration: \"none\"}}>\n                Profile \n                </a>\n            </button>\n             </div>\n\n             <div className=\"container-fluid mt-1 border border-danger\" style={Style.Content}>\n                 {pic ? (\n                    loadingPic ? null : ( <img src={pic} style={{width: \"20%\"}} />) \n                )  \n                : (\n                    loadingPic ? null : ( <img src=\"https://icons-for-free.com/iconfiles/png/512/instagram+person+profile+icon-1320184028516722357.png\" style={{width: \"10%\"}}/> ) \n                )}\n\n                <h1>Form</h1>\n                <form>\n                    <div className=\"custom-file\">\n                        <input\n                            type=\"file\"\n                            className=\"custom-file-input\"\n                            id=\"customFile\"\n                            accept=\"image/*\"\n                            onChange={ onInputChange }\n                        />\n\n                        <label \n                            className=\"custom-file-label w-50 ml-5\"\n                            htmlFor=\"custpmFile\">\n                            {!file? <div>Browse Pic</div> : <div>{file.name}</div>}\n                        </label>\n                    </div>\n                </form>\n                \n                <Modal\n                    title=\"Crop Image\"\n                    visible={isModalVisible}\n                    onOk={(e)=>handleSubmitImage(e)}\n                    onCancel={handleCancel}\n                    closable={false}\n                    okButtonProps={ statusButt }\n                    cancelButtonProps={ statusButt }\n                >\n                    {inputImg64 ? (\n                        <ImageCropper getBlob={getBlob} inputImg64={inputImg64}/> \n                        ) : (\n                            null\n                        )\n                    }\n                    \n                    {progress ? (\n                        <div className=\"text-center\">\n                            <div className=\"spinner-border mt-5 my-3\" role=\"status\"/><br/>\n                            <span className=\"\">Uploading...</span>\n                        </div>\n                        \n                    ) : null}\n                </Modal>\n\n             </div>\n        </div>\n    )\n}\n\nexport default AdminPage\n","/Users/iris/majoramassage/src/Components/Information.js",["122","123","124","125","126","127","128","129","130","131","132","133"],"import React, { useContext, useEffect, useState } from 'react'\n\nimport app, { firestore, storage } from \"../Firebase/firebase\"\n\nimport Header from \"./Parts/Header\"\n\nimport moment from \"moment\";\nimport { List, Avatar, DatePicker, Space, Select, Button, message, Card, Comment, Divider, Empty, Image} from 'antd';\nimport { BookOutlined } from '@ant-design/icons';\n\nimport { withStyles } from \"@material-ui/core/styles\";\nimport Rating from \"@material-ui/lab/Rating\";\nimport FavoriteIcon from \"@material-ui/icons/Favorite\";\n\nimport { AuthContext } from \"./Auth\"\n\nvar _ = require('lodash');\nfunction Information( {allEmployees} ) {\n    const { Option, OptGroup } = Select;\n    \n    const [ status, setStatus ] = useState(true)\n\n    const [ isModalVisible, setIsModalVisible ] = useState(false);\n    const [ statusButt, setstatusButt ] = useState(false);\n    const [ listItem, setListItem ] = useState(\"\")\n\n    const [ queue, setQueue ] = useState([])\n    \n    const [ date, setDate ] = useState(\"\")\n    const [ time, setTime ] = useState(\"\")\n    const [ DateTime, setDateTime ] = useState({Date:\"\", Time: \"\"})\n\n    const [ progress, setProgress ] = useState(false)\n\n    const { currentUser, userData, Modal } = useContext(AuthContext)\n\n\n    const QueueOrderedDESC =  _.orderBy(allEmployees.queue, [\"Date\", \"Time\"], [\"desc\", \"desc\"])// เรียงวันล่าสุดมาก่อน\n        const FilterByDone = _.filter(QueueOrderedDESC, ['status', \"Done\"])// Filter หาที่มี status เป็น Done\n            const FilterReviewed = FilterByDone.filter(item => {\n            return ![{totalStar: null}].some(NullStar => NullStar.totalStar === item.Review.totalStar)\n        })// Different หาคืวที่มีการให้คะแนนแล้ว เพื่อจะเอาไปแสดงในช่องรีวิว\n                const sumStar = FilterReviewed.reduce((prev, item)=>{\n                    return(item.Review.totalStar + prev )\n                }, 0)// sum star ที่งหมด\n                    const finalStar = (sumStar/FilterReviewed.length).toFixed( 1 ) // หารให้เต็ม 5 \n\n    const OrderedListMassage = _.orderBy(allEmployees.listMassage, [\"id\"], [\"asc\"])// เรียง list จาก id น้อยไปหามาก\n\n    const Style = {\n        Header: {\n            height: \"7vh\"\n        },\n        // preContent: {\n        //     height: \"30vh\"\n        // },\n        Content: {\n            minHeight: \"92vh\",\n            paddingLeft: \"15%\", \n            paddingRight: \"15%\"\n        }\n    }\n\n    const StyledRating = withStyles({\n        iconFilled: {\n          color: \"#ff6d75\"\n        },\n        iconHover: {\n          color: \"#ff3d47\"\n        }\n      })(Rating);\n\n{/* ////////////////////// Date & Time Zone */}\n    const onChangeDate = (date, dateString) => {\n        // console.log(dateString);\n        setDate(dateString)\n    }\n      \n    const onChangeTime = (value) => {\n        // console.log(value);\n        setTime(value)\n    }\n      \n    const disabledDate = (current) => {\n        // Can not select days before today and today\n        return current && current < moment().startOf(\"day\");\n    }\n\n    useEffect(() => {\n        // Disable Time if date is empty\n        if(date !== \"\"){\n            setStatus(false)\n        }\n    }, [date])\n\n    useEffect(() => {\n        setDateTime({Date: date, Time: time})\n    }, [date, time])\n\n{/* ////////////////////// When Submit */}\n    const submiBooking = async (e) => {\n        e.preventDefault();\n\n        const userRef = firestore.collection(\"users\").doc(userData.uid)\n        const chiropractorRef = firestore.collection(\"users\").doc(allEmployees.uid)\n\n        if(date && time !== \"\"){\n            setProgress(true)\n            setstatusButt(true)\n\n            try{\n                // For Member\n                const getDocUser = await userRef.get()\n                const objDocUser = await getDocUser.data()\n                const created = new Date().valueOf()\n    \n                const objUser = {...objDocUser,\n                    queue:[ ...objDocUser.queue,\n                    {\n                        ChiropactorName: allEmployees.displayName,\n                        ChiropactorPic: allEmployees.urlPhoto,\n                        ChiropactorKey: allEmployees.uid,\n                        createed: created,\n                        id: listItem.id,\n                        name: listItem.name,\n                        price: listItem.price,\n                        status: \"NotDone\",\n                        Date: date,\n                        Time: time,\n                        Review: {\n                            Stars: {\n                                Cuteness: null,\n                                BodyShape: null,\n                                BodySkin: null,\n                                Massage: null,\n                                Friendly: null\n                            },\n                            totalStar: null,\n                            Comment: \"\",\n                            Reviewer: userData.displayName\n                        }\n                    }\n                    ]}\n    \n              await userRef.set(objUser)\n    \n                // For Chiropactor\n                const getDocChiropactor = await chiropractorRef.get()\n                const objDocChiropactor = await getDocChiropactor.data()\n    \n                /* ใช้ Spread เพื่อ union ข้อมูลเก่าและอันใหม่นะครับ  use spread to combine old and new data together */\n                const objChiropactor = {...objDocChiropactor,\n                    queue:[...objDocChiropactor.queue,\n                    {\n                        MemberName: userData.displayName,\n                        MemberPic: userData.urlPhoto,\n                        MemberKey: userData.uid,\n                        createed: created,\n                        id: listItem.id,\n                        name: listItem.name,\n                        price: listItem.price,\n                        status: \"NotDone\",\n                        Date: date,\n                        Time: time,\n                        Review: {\n                            Stars: {\n                                Cuteness: null,\n                                BodyShape: null,\n                                BodySkin: null,\n                                Massage: null,\n                                Friendly: null\n                            },\n                            totalStar: null,\n                            Comment: \"\",\n                            Reviewer: userData.displayName\n                        }\n                    }\n                    ]}\n    \n                 await chiropractorRef.set(objChiropactor)\n    \n                        setIsModalVisible(false);\n                        setProgress(false)\n                        setstatusButt(false)\n\n                        msgSuccess()\n    \n            } catch (err) {\n                console.log(err)\n                msgError(err)\n            }\n\n        } else {\n            message.warning({\n                content: (<h5 className=\"mt-5\">กรุณาเลือก วันที่/เวลา ให้ถูกต้อง</h5>), \n                duration: 3,\n                style: {\n                    marginTop: '8vh',\n                  },});\n        }\n    }\n\n{/* //////////////////////  Message */}\n    const msgSuccess = () => {\n        message.success({\n            content: (<h5 className=\"mt-5\">ยืนยันรายการสำเร็จ</h5>), \n            duration: 1.5,\n            style: {\n                marginTop: '8vh',\n            },})\n            .then(() => window.location.reload())\n    }\n\n    const msgError = (err) => {\n        message.error({\n            content: (<h5 className=\"mt-5\">{err}</h5>), \n            duration: 3,\n            style: {\n                marginTop: '8vh',\n            },});\n    }\n\n{/* ////////////////////// Modal Control */}\n    const showModal = (item) => {\n        // e.preventDefault();\n        console.log(item)\n        setIsModalVisible(true);\n        setListItem(item)\n        };\n    const handleCancel = () => {\n        setIsModalVisible(false);\n\n        };\n\n{/* //////////////////////  Get queue */}\n\n    const copyQueue =  () => {\n        // Get มาแค่ Date กับ Time ใส่ไว้ใน object\n        const final = allEmployees.queue.map((item, index) => {\n            return {Date: item.Date, Time: item.Time}\n        })\n            setQueue(final)\n    }\n\n    useEffect(() => {\n        copyQueue()\n    }, [])\n\n    useEffect(() => {\n        // console.log()\n    }, [])\n\n    return (\n        <div>\n          <div className=\"container-fluid text-right border border-danger \" style={Style.Header}>\n            <Header />\n          </div>\n\n          <div className=\"container-fluid mt-1 pt-3 text-center border border-danger\" style={Style.Content}>\n              <div className=\"row\">\n{/* ////////////////////// col left */}\n                <div className=\"col border border-danger\" style={{height: \"80vh\"}}> \n                    {\n                        allEmployees.urlPhoto ? (\n                            <Image style={{maxWidth: \"80%\"}} src={allEmployees.urlPhoto}/>\n                        ) : (\n                            <img src=\"https://icons-for-free.com/iconfiles/png/512/instagram+person+profile+icon-1320184028516722357.png\"/>\n                        )\n                    }\n                </div>\n\n{/* ////////////////////// col Right */}\n                <div className=\"col border border-danger \">\n                    <div className=\"row\">\n                        <div className='col-12 pt-3 text-left'>\n                            <h1 style={{display: \"inline\"}}>น้อง { allEmployees? allEmployees.displayName : null}</h1>\n                        </div>\n                        <div className='col pt-3 text-left'>\n                            <h5>อายุ: { allEmployees? allEmployees.age : null } </h5>\n                            <h5>จำนวนผู้เข้าใช้บริการ: { allEmployees? FilterReviewed.length : null} </h5>\n\n                            {FilterReviewed.length !== 0?(\n                            <h2 style={{color: \"#ff6d75\"}}>{finalStar}: { allEmployees? (<StyledRating\n                                className=\"mt-1\"\n                                size=\"large\"\n                                precision={0.1}\n                                value={finalStar}\n                                icon={<FavoriteIcon fontSize=\"inherit\" />}\n                                readOnly\n                            />) : null}</h2>):(<h3>ยังไม่มีการรีวิว</h3>)}\n\n                        </div>\n                    </div>\n                    \n                    <Divider orientation=\"center\"><h5>รายการนวด</h5> </Divider>\n    \n                    <List\n                        className=\"mt-3\"\n                        itemLayout=\"horizontal\"\n                        dataSource={OrderedListMassage}\n                        locale={{ emptyText: <Empty image={Empty.PRESENTED_IMAGE_DEFAULT} description=\"ไม่มีข้อมูล\" />}}\n                        renderItem={item => (\n                            // ทำงานเหมือน map\n                        <List.Item className=\"mx-5 \">\n                            {/* actions={[<a key=\"list-loadmore-edit\" className=\"mr-5\">edit</a>]} */}\n                            <List.Item.Meta\n                                // avatar={ <CaretRightFilled />}\n                                title={\n                                    <h4 style={{display: \"inline\"}}>{item.name} ราคา: <h4 style={{display: \"inline\", color: \"#ff4d4f\"}}>{item.price}</h4></h4>\n                                \n                                    }\n                                description={\"\"}\n                            />  \n                            {userData? (\n                                <Button onClick={()=>showModal(item)} style={{background: \"#0e77ca\", color: \"white\", border: \"1px solid transparent\"}} size=\"large\"><BookOutlined /> จอง</Button>\n                            ) : (\n                                <div>กรุณาเข้าสู่ระบบ</div>\n                            )}\n                        </List.Item>\n                        )}\n                    />\n                  </div>\n              </div>\n\n                <div className=\"col mt-5 border border-danger\" style={{paddingLeft: \"15%\", paddingRight: \"15%\"}}>\n                {/* {FilterReviewed.length !== 0? ( */}\n                    <Card\n                    // key={index}\n                    type=\"inner\"\n                    className=\"mb-3\"\n                    title={\n                        <div className=\"text-left my-3\">\n                            <h3>การรีวิว   </h3>\n                            {FilterReviewed.length !== 0?(\n                            <>\n                                <h2 style={{display: \"inline\", color: \"#ff6d75\"}}> {finalStar}</h2><h4 style={{display: \"inline\", color: \"#ff6d75\"}}> /5</h4><br/>\n                                    <StyledRating\n                                        className=\"mt-1\"\n                                        size=\"large\"\n                                        precision={0.1}\n                                        value={finalStar}\n                                        icon={<FavoriteIcon fontSize=\"inherit\" />}\n                                        readOnly\n                                    />\n                            </>):(<h3>ยังไม่มีการรีวิว</h3>)}\n                        </div>\n                    }>\n                        {FilterReviewed.length !== 0?(\n                            FilterReviewed.map((item) => {\n                                // console.log(item)\n                            return(\n                                <div>\n                                    <Comment\n                                        author={<h4>คุณ {item.Review.Reviewer}</h4>}\n                                        avatar={<Avatar src={item.MemberPic} />}\n                                        content={\n                                            <div className=\"text-left\">\n\n                                           <p className=\"ml-5 my-3\">{item.Review.Comment}</p>\n\n                                            <h5 className=\"ml-5\">หน้าตา: \n                                            <StyledRating\n                                                size=\"small\"\n                                                value={item.Review.Stars.Cuteness}\n                                                icon={<FavoriteIcon fontSize=\"inherit\" />}\n                                                readOnly\n                                            /></h5> \n                                        <h5 className=\"ml-5\">รูปร่าง: \n                                            <StyledRating\n                                                size=\"small\"\n                                                value={item.Review.Stars.BodyShape}\n                                                icon={<FavoriteIcon fontSize=\"inherit\" />}\n                                                readOnly\n                                            /></h5> \n                                        <h5 className=\"ml-5\">ผิวพรรณ: \n                                            <StyledRating\n                                                size=\"small\"\n                                                value={item.Review.Stars.BodySkin}\n                                                icon={<FavoriteIcon fontSize=\"inherit\" />}\n                                                readOnly\n                                            /></h5> \n                                        <h5 className=\"ml-5\">งานนวด: \n                                            <StyledRating\n                                                size=\"small\"\n                                                value={item.Review.Stars.Massage}\n                                                icon={<FavoriteIcon fontSize=\"inherit\" />}\n                                                readOnly\n                                            /></h5> \n                                        <h5 className=\"ml-5\">ความเป็นกันเอง: \n                                            <StyledRating\n                                                size=\"small\"\n                                                value={item.Review.Stars.Friendly}\n                                                icon={<FavoriteIcon fontSize=\"inherit\" />}\n                                                readOnly\n                                            /></h5> \n                        \n                                            <Divider orientation=\"center\"><h5>คะแนนรวม: {item.Review.totalStar} <FavoriteIcon style={{color: \"#ff6d75\"}}/></h5> </Divider>\n                        \n                                            <p>{item.Date} {item.Time}</p>\n                                        </div>\n                                        }\n                                        />\n                                   <Divider />\n                                </div>\n\n                            )\n                        })):(<Empty description=\"ไม่มีข้อมูล\" className=\"my-5\" />)}\n                    </Card>\n                </div>\n            </div>\n\n{/* ////////////////////// Modal */}\n                <Modal\n                    // title=\"เปลี่ยนชื่อ\"\n                    visible={isModalVisible}\n                    onOk={(e)=>submiBooking(e)}\n                    onCancel={()=>handleCancel()}\n                    closable={false}\n                    className=\"text-center\"\n                    footer={[\n                        <Button key=\"back\" loading={statusButt} onClick={()=>handleCancel()}>\n                          ย้อนกลับ\n                        </Button>,\n                        <Button key=\"submit\" type=\"primary\" loading={statusButt} onClick={(e)=>submiBooking(e)}>\n                          ตกลง\n                        </Button>,\n                      ]}\n                >   \n\n                <div className=\"my-5\">\n                    <h4>\n                        {listItem.name} ราคา: {listItem.price}\n                    </h4>\n                </div>\n                \n                \n                <Space direction=\"vertical\" size={12}>\n                    <DatePicker\n                        onChange={onChangeDate}\n                        // value={date !== \"\" ? date : \"\"}\n                        format=\"YYYY-MM-DD\"\n                        disabledDate={disabledDate}\n                        placeholder=\"วันที่\"\n                    />\n                </Space>\n\n                <Select\n                    disabled={status}\n                    defaultValue=\"เวลา\"\n                    style={{ width: 120 }}\n                    onChange={onChangeTime}\n                >\n                    <OptGroup label=\"ช่วงบ่าย\">\n                        <Option key=\"15:00\" disabled={ queue.find(item => item.Date === date && item.Time === \"15:00\"? (true) : (false)) }>15:00</Option>\n                        <Option key=\"16:00\" disabled={ queue.find(item => item.Date === date && item.Time === \"16:00\"? (true) : (false)) }>16:00</Option>\n                        <Option key=\"17:00\" disabled={ queue.find(item => item.Date === date && item.Time === \"17:00\"? (true) : (false)) }>17:00</Option>\n                    </OptGroup>\n                    \n                    <OptGroup label=\"ช่วงค่ำ\">\n                        <Option key=\"19:00\" disabled={ \n                            //เอา Arr คิวของหมอนวดมาคุ้ยหา ว่ามีวันที่และเวลาตรงกับที่เลือกใน Pickdate มั้ย ถ้ามีก็ให้ Disable ถ้าไม่ก็ ให้เลือกได้ (ยังหาวิํธีแบบ Dynamic ไม่่ได้ T______T ) \n                            queue.find(item => { \n                                //แบบ Short\n                                return item.Date === date && item.Time === \"19:00\"? (true) : (false)\n\n                                // แบบ Full (เพื่อความเข้าใจ)\n                                // if(item.Date === date && item.Time === \"19:00\" )return true\n                                // else return false    \n                            }) }>19:00</Option>\n                        <Option key=\"20:00\" disabled={ queue.find(item => item.Date === date && item.Time === \"20:00\"? (true) : (false)) }>20:00</Option>\n                        <Option key=\"21:00\" disabled={ queue.find(item => item.Date === date && item.Time === \"21:00\"? (true) : (false)) }>21:00</Option>\n                        <Option key=\"22:00\" disabled={ queue.find(item => item.Date === date && item.Time === \"22:00\"? (true) : (false)) }>22:00</Option>\n                        <Option key=\"23:00\" disabled={ queue.find(item => item.Date === date && item.Time === \"23:00\"? (true) : (false)) }>23:00</Option>\n                    </OptGroup>\n                </Select>\n                </Modal>\n        </div>\n    )\n}\n\nexport default Information\n","/Users/iris/majoramassage/src/Firebase/firebase.js",[],"/Users/iris/majoramassage/src/Components/cropImage.js",[],"/Users/iris/majoramassage/src/Components/ImageCropper.js",[],"/Users/iris/majoramassage/src/Components/MassageList.js",["134","135","136","137","138","139","140"],"import React, { useEffect, useContext, useState } from 'react'\n\nimport app, { firestore, storage } from \"../Firebase/firebase\"\n\nimport { Table, Space, Divider } from \"antd\";\n// import { difference, intersection } from 'lodash';\n\nimport Header from \"./Parts/Header\"\n\nimport { AuthContext } from \"./Auth\"\n\nfunction MassageList() {\n    const { currentUser, userData } = useContext(AuthContext)\n    const { Column, ColumnGroup } = Table;\n\n    const [ allMassageLitsts, setAllmassageLists ] = useState([])\n    const [ individiList, setindividiList ] = useState([])\n\n    const [ finalAllMassageLitsts, setfinalAllMassageLitsts ] = useState([])\n    const [ finalIndividiList, setfinalIndividiList ] = useState([])\n\n    const Style = {\n        Header: {\n            height: \"7vh\"\n        },\n        // preContent: {\n        //     height: \"30vh\"\n        // },\n        Content: {\n            minHeight: \"92vh\"\n        }\n    }\n\n    //Get allMassageLists and Set currntUser List :อันดับแรก\n    useEffect(() => {\n        const getAllMassageLists = firestore\n        .collection(\"massageLists\")\n        .doc(\"allMassageLitsts\")\n\n        getAllMassageLists\n        .onSnapshot((snapshot)=>{\n            const rawData = snapshot.data()\n            const finalData = rawData.listMassage\n\n            // console.log(finalData)\n            let tempArr = []\n            finalData.forEach((doc)=>{\n                tempArr = [ ...tempArr, doc]\n            })\n\n            setAllmassageLists(tempArr)\n        })\n\n        setindividiList(userData.listMassage)\n\n        //ติดตาม userData เพราะเวลาอัพเดทค่าจะได้มา trig useEffect นี้ทำงาน\n    }, [userData])\n\n    //แจกข้อมูลไป 2 ส่วน :อันดับสอง\n    useEffect(() => {\n\n        //Show AllList which not occur in IndividualList (เอาเฉพาะ AllList ที่ไม่มีใน IndividualList) (Different)\n        let finalAll = allMassageLitsts.filter(All => {\n            return !individiList.some(Indivi => Indivi.id === All.id)})\n        // console.log(\"AllLeft\", finalAll)\n\n            setfinalAllMassageLitsts(finalAll)\n\n        //Show IndividualList which not occur in AllList (เอาเฉพาะ IndividualList ที่มีใน AllList) (จริงๆไม่ได้มีก็ได้เพราะ แค่เอา List ของ พนักงานมาแสดง =____=) (Intersection)\n        let finalIndivi = allMassageLitsts.filter(All => {\n            return individiList.some(Indivi => Indivi.id === All.id)})\n        // console.log(\"IndiviLeft\", finalIndivi)\n\n            setfinalIndividiList(finalIndivi)\n\n    }, [allMassageLitsts])\n\n\n    useEffect(() => {\n        // console.log(finalAllMassageLitsts)\n        // console.log(finalIndividiList)\n    }, [finalAllMassageLitsts, finalIndividiList])\n\n    const AddData = async ( Selected ) => {\n        try{\n\n            const userRef = firestore.collection(\"users\").doc(userData.uid)\n            \n            const getDoc = await userRef.get()\n            const objDoc = await getDoc.data()\n           \n\n            let tempArr = []\n\n            tempArr = [ ...finalIndividiList, Selected ] //ตบข้อมูลเก่ามา พร้อมยัดข้อมูลใหม่เข้าไปด้วย Put prevData and newData together \n            // console.log(tempArr)\n\n            const obj = {\n                ...objDoc,\n                listMassage: tempArr\n            }\n            userRef.set(obj) \n\n        } catch (err) {\n            console.log(err)\n        }\n    }\n\n    const DeleteData = async ( Selected ) => {\n        try{\n\n            const userRef = firestore.collection(\"users\").doc(userData.uid)\n\n            const getDoc = await userRef.get()\n            const objDoc = await getDoc.data()\n\n           \n            let finalDelete = finalIndividiList.filter(Indivi => {\n                return ![Selected].some(SelectedList => SelectedList.id === Indivi.id)\n            }) //Different : Return finalIndividiList ที่ไม่มี Selected \n\n            // let Diff = _.difference(finalIndividiList, [Selected]) // Lodash version\n\n            const obj = {\n                ...objDoc,\n                listMassage: finalDelete\n            }\n            userRef.set(obj)\n\n        } catch (err) {\n            console.log(err)\n        }\n    }\n\n   \n\n    return (\n        <div>\n            <div className=\"container-fluid text-right border border-danger \" style={Style.Header}>\n                <Header />\n            </div>\n\n            <div className=\"container-fluid mt-1 text-center  border border-danger\" style={Style.Content}>\n\n                <div className=\"\" >\n                    <div className=\"row justify-content-center \">\n                        <div style={{width: \"50%\"}}>\n\n                        <h1>storeLists</h1>\n\n                        <Table dataSource={finalAllMassageLitsts}  pagination={false} rowKey=\"id\" >\n                            <Column title=\"id\" dataIndex=\"id\" key=\"id\" />\n                            <Column title=\"name\" dataIndex=\"name\" />\n                            <Column title=\"price\" dataIndex=\"price\"  />\n                            <Column\n                            title=\"Action\"\n                            key=\"action\"\n                            render={(text, record, index) => (\n                                <Space size=\"middle\">\n                                    <a style={{color: \"green\"}} onClick={() => { AddData(text) }}>เพิ่ม</a>\n                                </Space>\n                            )}\n                            />\n                        </Table>\n                        </div>\n                        \n                    </div>\n                    \n\n                    <Divider />\n\n                    <div className=\"row justify-content-center \">\n                        <div style={{width: \"50%\"}}>\n\n                        <h1>individiList</h1>\n\n                            <Table dataSource={finalIndividiList} pagination={false} rowKey=\"id\" >\n                                <Column title=\"id\" dataIndex=\"id\" key=\"id\" />\n                                <Column title=\"name\" dataIndex=\"name\" />\n                                <Column title=\"price\" dataIndex=\"price\"  />\n                                <Column\n                                title=\"Action\"\n                                key=\"action\"\n                                render={(text, record) => (\n                                    <Space size=\"middle\">\n                                        <a style={{color: \"red\"}} onClick={() => { DeleteData(text)}}>ลบ</a>\n                                    </Space>\n                                )}\n                                />\n                            </Table>\n                        </div>\n                    </div>\n\n                </div>\n                \n\n            </div>\n            \n        </div>\n    )\n}\n\nexport default MassageList\n",["141","142"],"/Users/iris/majoramassage/src/Components/Parts/Header.js",["143","144","145","146","147","148","149","150"],"/Users/iris/majoramassage/src/Components/Routes/EmployeeRoute.js",["151"],"import React, { useContext } from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport { AuthContext } from \"../Auth\";\n\nconst EmployeeRoute = ({ component: RouteComponent, ...rest }) => {\n  const {currentUser, userData} = useContext(AuthContext);\n  return (\n    <Route\n      {...rest}\n      render={routeProps => \n        !!currentUser ? ( \n          userData.role == \"employee\"? ( \n              <RouteComponent {...routeProps} /> \n            )\n            : ( \n            <Redirect to={\"/login\"} /> \n          ))\n        : ( \n        <Redirect to={\"/login\"} /> \n        )\n      }\n    />\n  );\n};\n\n\nexport default EmployeeRoute","/Users/iris/majoramassage/src/Components/Routes/LoggedinRoute.js",[],"/Users/iris/majoramassage/src/Components/Booking.js",["152","153","154","155","156","157","158","159","160","161","162","163","164","165","166","167","168","169","170","171","172","173","174","175","176","177","178"],{"ruleId":"179","severity":1,"message":"180","line":1,"column":40,"nodeType":"181","messageId":"182","endLine":1,"endColumn":48},{"ruleId":"179","severity":1,"message":"183","line":3,"column":8,"nodeType":"181","messageId":"182","endLine":3,"endColumn":11},{"ruleId":"179","severity":1,"message":"184","line":3,"column":15,"nodeType":"181","messageId":"182","endLine":3,"endColumn":24},{"ruleId":"179","severity":1,"message":"185","line":10,"column":13,"nodeType":"181","messageId":"182","endLine":10,"endColumn":24},{"ruleId":"179","severity":1,"message":"186","line":10,"column":26,"nodeType":"181","messageId":"182","endLine":10,"endColumn":34},{"ruleId":"187","severity":1,"message":"188","line":48,"column":33,"nodeType":"189","endLine":48,"endColumn":85},{"ruleId":"187","severity":1,"message":"188","line":50,"column":33,"nodeType":"189","endLine":50,"endColumn":170},{"ruleId":"190","replacedBy":"191"},{"ruleId":"192","replacedBy":"193"},{"ruleId":"179","severity":1,"message":"183","line":3,"column":8,"nodeType":"181","messageId":"182","endLine":3,"endColumn":11},{"ruleId":"194","severity":1,"message":"195","line":139,"column":8,"nodeType":"196","endLine":139,"endColumn":10,"suggestions":"197"},{"ruleId":"187","severity":1,"message":"188","line":199,"column":59,"nodeType":"189","endLine":199,"endColumn":99},{"ruleId":"187","severity":1,"message":"188","line":202,"column":59,"nodeType":"189","endLine":202,"endColumn":193},{"ruleId":"179","severity":1,"message":"198","line":1,"column":38,"nodeType":"181","messageId":"182","endLine":1,"endColumn":51},{"ruleId":"179","severity":1,"message":"199","line":5,"column":17,"nodeType":"181","messageId":"182","endLine":5,"endColumn":23},{"ruleId":"194","severity":1,"message":"200","line":44,"column":8,"nodeType":"196","endLine":44,"endColumn":17,"suggestions":"201"},{"ruleId":"190","replacedBy":"202"},{"ruleId":"192","replacedBy":"203"},{"ruleId":"179","severity":1,"message":"204","line":1,"column":38,"nodeType":"181","messageId":"182","endLine":1,"endColumn":49},{"ruleId":"190","replacedBy":"205"},{"ruleId":"192","replacedBy":"206"},{"ruleId":"179","severity":1,"message":"204","line":1,"column":38,"nodeType":"181","messageId":"182","endLine":1,"endColumn":49},{"ruleId":"207","severity":1,"message":"208","line":35,"column":38,"nodeType":"209","messageId":"210","endLine":35,"endColumn":40},{"ruleId":"207","severity":1,"message":"208","line":48,"column":46,"nodeType":"209","messageId":"210","endLine":48,"endColumn":48},{"ruleId":"207","severity":1,"message":"208","line":71,"column":31,"nodeType":"209","messageId":"210","endLine":71,"endColumn":33},{"ruleId":"179","severity":1,"message":"211","line":1,"column":37,"nodeType":"181","messageId":"182","endLine":1,"endColumn":47},{"ruleId":"190","replacedBy":"212"},{"ruleId":"192","replacedBy":"213"},{"ruleId":"179","severity":1,"message":"183","line":3,"column":8,"nodeType":"181","messageId":"182","endLine":3,"endColumn":11},{"ruleId":"179","severity":1,"message":"214","line":5,"column":8,"nodeType":"181","messageId":"182","endLine":5,"endColumn":14},{"ruleId":"179","severity":1,"message":"215","line":121,"column":11,"nodeType":"181","messageId":"182","endLine":121,"endColumn":20},{"ruleId":"179","severity":1,"message":"216","line":125,"column":13,"nodeType":"181","messageId":"182","endLine":125,"endColumn":21},{"ruleId":"187","severity":1,"message":"188","line":175,"column":43,"nodeType":"189","endLine":175,"endColumn":83},{"ruleId":"187","severity":1,"message":"188","line":178,"column":43,"nodeType":"189","endLine":178,"endColumn":177},{"ruleId":"179","severity":1,"message":"183","line":3,"column":8,"nodeType":"181","messageId":"182","endLine":3,"endColumn":11},{"ruleId":"179","severity":1,"message":"217","line":3,"column":26,"nodeType":"181","messageId":"182","endLine":3,"endColumn":33},{"ruleId":"179","severity":1,"message":"218","line":31,"column":13,"nodeType":"181","messageId":"182","endLine":31,"endColumn":21},{"ruleId":"179","severity":1,"message":"219","line":33,"column":13,"nodeType":"181","messageId":"182","endLine":33,"endColumn":21},{"ruleId":"179","severity":1,"message":"185","line":35,"column":13,"nodeType":"181","messageId":"182","endLine":35,"endColumn":24},{"ruleId":"220","severity":1,"message":"221","line":73,"column":1,"nodeType":"222","messageId":"223","endLine":73,"endColumn":48},{"ruleId":"220","severity":1,"message":"221","line":100,"column":1,"nodeType":"222","messageId":"223","endLine":100,"endColumn":43},{"ruleId":"220","severity":1,"message":"221","line":203,"column":1,"nodeType":"222","messageId":"223","endLine":203,"endColumn":40},{"ruleId":"220","severity":1,"message":"221","line":223,"column":1,"nodeType":"222","messageId":"223","endLine":223,"endColumn":45},{"ruleId":"220","severity":1,"message":"221","line":235,"column":1,"nodeType":"222","messageId":"223","endLine":235,"endColumn":42},{"ruleId":"194","severity":1,"message":"224","line":247,"column":8,"nodeType":"196","endLine":247,"endColumn":10,"suggestions":"225"},{"ruleId":"187","severity":1,"message":"188","line":267,"column":29,"nodeType":"189","endLine":267,"endColumn":140},{"ruleId":"179","severity":1,"message":"183","line":3,"column":8,"nodeType":"181","messageId":"182","endLine":3,"endColumn":11},{"ruleId":"179","severity":1,"message":"217","line":3,"column":26,"nodeType":"181","messageId":"182","endLine":3,"endColumn":33},{"ruleId":"179","severity":1,"message":"185","line":13,"column":13,"nodeType":"181","messageId":"182","endLine":13,"endColumn":24},{"ruleId":"179","severity":1,"message":"226","line":14,"column":21,"nodeType":"181","messageId":"182","endLine":14,"endColumn":32},{"ruleId":"194","severity":1,"message":"227","line":76,"column":8,"nodeType":"196","endLine":76,"endColumn":26,"suggestions":"228"},{"ruleId":"229","severity":1,"message":"230","line":160,"column":37,"nodeType":"189","endLine":160,"endColumn":99},{"ruleId":"229","severity":1,"message":"230","line":186,"column":41,"nodeType":"189","endLine":186,"endColumn":103},{"ruleId":"190","replacedBy":"231"},{"ruleId":"192","replacedBy":"232"},{"ruleId":"179","severity":1,"message":"184","line":3,"column":15,"nodeType":"181","messageId":"182","endLine":3,"endColumn":24},{"ruleId":"179","severity":1,"message":"217","line":3,"column":26,"nodeType":"181","messageId":"182","endLine":3,"endColumn":33},{"ruleId":"179","severity":1,"message":"233","line":5,"column":24,"nodeType":"181","messageId":"182","endLine":5,"endColumn":31},{"ruleId":"179","severity":1,"message":"234","line":13,"column":11,"nodeType":"181","messageId":"182","endLine":13,"endColumn":21},{"ruleId":"179","severity":1,"message":"235","line":17,"column":13,"nodeType":"181","messageId":"182","endLine":17,"endColumn":23},{"ruleId":"179","severity":1,"message":"236","line":17,"column":25,"nodeType":"181","messageId":"182","endLine":17,"endColumn":38},{"ruleId":"179","severity":1,"message":"237","line":22,"column":36,"nodeType":"181","messageId":"182","endLine":22,"endColumn":48},{"ruleId":"207","severity":1,"message":"208","line":61,"column":67,"nodeType":"209","messageId":"210","endLine":61,"endColumn":69},{"ruleId":"207","severity":1,"message":"208","line":12,"column":25,"nodeType":"209","messageId":"210","endLine":12,"endColumn":27},{"ruleId":"179","severity":1,"message":"183","line":3,"column":8,"nodeType":"181","messageId":"182","endLine":3,"endColumn":11},{"ruleId":"179","severity":1,"message":"217","line":3,"column":26,"nodeType":"181","messageId":"182","endLine":3,"endColumn":33},{"ruleId":"179","severity":1,"message":"185","line":18,"column":13,"nodeType":"181","messageId":"182","endLine":18,"endColumn":24},{"ruleId":"220","severity":1,"message":"221","line":81,"column":1,"nodeType":"222","messageId":"223","endLine":81,"endColumn":44},{"ruleId":"207","severity":1,"message":"208","line":84,"column":29,"nodeType":"209","messageId":"210","endLine":84,"endColumn":31},{"ruleId":"207","severity":1,"message":"208","line":89,"column":28,"nodeType":"209","messageId":"210","endLine":89,"endColumn":30},{"ruleId":"207","severity":1,"message":"208","line":95,"column":30,"nodeType":"209","messageId":"210","endLine":95,"endColumn":32},{"ruleId":"207","severity":1,"message":"208","line":96,"column":30,"nodeType":"209","messageId":"210","endLine":96,"endColumn":32},{"ruleId":"207","severity":1,"message":"208","line":101,"column":26,"nodeType":"209","messageId":"210","endLine":101,"endColumn":28},{"ruleId":"220","severity":1,"message":"221","line":109,"column":1,"nodeType":"222","messageId":"223","endLine":109,"endColumn":47},{"ruleId":"220","severity":1,"message":"221","line":116,"column":1,"nodeType":"222","messageId":"223","endLine":116,"endColumn":45},{"ruleId":"207","severity":1,"message":"208","line":129,"column":33,"nodeType":"209","messageId":"210","endLine":129,"endColumn":35},{"ruleId":"220","severity":1,"message":"221","line":143,"column":1,"nodeType":"222","messageId":"223","endLine":143,"endColumn":43},{"ruleId":"207","severity":1,"message":"208","line":159,"column":37,"nodeType":"209","messageId":"210","endLine":159,"endColumn":39},{"ruleId":"220","severity":1,"message":"221","line":184,"column":1,"nodeType":"222","messageId":"223","endLine":184,"endColumn":43},{"ruleId":"207","severity":1,"message":"208","line":187,"column":29,"nodeType":"209","messageId":"210","endLine":187,"endColumn":31},{"ruleId":"187","severity":1,"message":"188","line":203,"column":41,"nodeType":"189","endLine":203,"endColumn":135},{"ruleId":"207","severity":1,"message":"208","line":234,"column":46,"nodeType":"209","messageId":"210","endLine":234,"endColumn":48},{"ruleId":"207","severity":1,"message":"208","line":237,"column":56,"nodeType":"209","messageId":"210","endLine":237,"endColumn":58},{"ruleId":"207","severity":1,"message":"208","line":247,"column":76,"nodeType":"209","messageId":"210","endLine":247,"endColumn":78},{"ruleId":"220","severity":1,"message":"221","line":325,"column":1,"nodeType":"222","messageId":"223","endLine":325,"endColumn":47},{"ruleId":"220","severity":1,"message":"221","line":332,"column":1,"nodeType":"222","messageId":"223","endLine":332,"endColumn":45},{"ruleId":"220","severity":1,"message":"221","line":359,"column":1,"nodeType":"222","messageId":"223","endLine":359,"endColumn":45},{"ruleId":"220","severity":1,"message":"221","line":399,"column":1,"nodeType":"222","messageId":"223","endLine":399,"endColumn":40},{"ruleId":"220","severity":1,"message":"221","line":418,"column":1,"nodeType":"222","messageId":"223","endLine":418,"endColumn":42},{"ruleId":"220","severity":1,"message":"221","line":425,"column":1,"nodeType":"222","messageId":"223","endLine":425,"endColumn":49},{"ruleId":"187","severity":1,"message":"188","line":492,"column":29,"nodeType":"189","endLine":492,"endColumn":122},"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'app' is defined but never used.","'firestore' is defined but never used.","'currentUser' is assigned a value but never used.","'userData' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-native-reassign",["238"],"no-negated-in-lhs",["239"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'currentUser.uid' and 'userData.role'. Either include them or remove the dependency array.","ArrayExpression",["240"],"'createContext' is defined but never used.","'Button' is defined but never used.","React Hook useEffect has a missing dependency: 'userRef'. Either include it or remove the dependency array.",["241"],["238"],["239"],"'useCallback' is defined but never used.",["238"],["239"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'useContext' is defined but never used.",["238"],["239"],"'Header' is defined but never used.","'showModal' is assigned a value but never used.","'handleOk' is assigned a value but never used.","'storage' is defined but never used.","'DateTime' is assigned a value but never used.","'progress' is assigned a value but never used.","no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","React Hook useEffect has a missing dependency: 'copyQueue'. Either include it or remove the dependency array.",["242"],"'ColumnGroup' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'individiList'. Either include it or remove the dependency array.",["243"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md",["238"],["239"],"'Divider' is defined but never used.","'breakPoint' is assigned a value but never used.","'pixelValue' is assigned a value but never used.","'setPixelValue' is assigned a value but never used.","'allEmployees' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"244","fix":"245"},{"desc":"246","fix":"247"},{"desc":"248","fix":"249"},{"desc":"250","fix":"251"},"Update the dependencies array to be: [currentUser.uid, userData.role]",{"range":"252","text":"253"},"Update the dependencies array to be: [loading, userRef]",{"range":"254","text":"255"},"Update the dependencies array to be: [copyQueue]",{"range":"256","text":"257"},"Update the dependencies array to be: [allMassageLitsts, individiList]",{"range":"258","text":"259"},[3789,3791],"[currentUser.uid, userData.role]",[1374,1383],"[loading, userRef]",[8250,8252],"[copyQueue]",[2440,2458],"[allMassageLitsts, individiList]"]